{
    "sourceFile": "src/views/ProductList.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 70,
            "patches": [
                {
                    "date": 1695856176654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1695856186546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     products: [],\r\n   };\r\n \r\n   componentDidMount() {\r\n-    axios.get('http://your-api-url/products')\r\n+    axios.get('http:///products')\r\n       .then(response => {\r\n         this.setState({ products: response.data });\r\n       })\r\n       .catch(error => {\r\n"
                },
                {
                    "date": 1695856195503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     products: [],\r\n   };\r\n \r\n   componentDidMount() {\r\n-    axios.get('http:///products')\r\n+    axios.get('http://http://localhost:8085/products')\r\n       .then(response => {\r\n         this.setState({ products: response.data });\r\n       })\r\n       .catch(error => {\r\n"
                },
                {
                    "date": 1695857658708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,39 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios.get('http://localhost:8085/products')\r\n+      .then(response => {\r\n+        this.setState({ products: response.data });\r\n+      })\r\n+      .catch(error => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  render() {\r\n+    return (\r\n+        \r\n+      <div>\r\n+        <h2>Product List</h2>\r\n+        <Link to=\"/admin/products/create\">Create Product</Link>\r\n+        <ul>\r\n+          {this.state.products.map(product => (\r\n+            <li key={product.id}>\r\n+              {product.nomProduit}: ${product.prixProduit}\r\n+              <Link to={`/admin/products/edit/${product.id}`}>Edit</Link>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695857664206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,39 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios.get('http://localhost:8085/products')\r\n+      .then(response => {\r\n+        this.setState({ products: response.data });\r\n+      })\r\n+      .catch(error => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  render() {\r\n+    return (\r\n+        <></>\r\n+      <div>\r\n+        <h2>Product List</h2>\r\n+        <Link to=\"/admin/products/create\">Create Product</Link>\r\n+        <ul>\r\n+          {this.state.products.map(product => (\r\n+            <li key={product.id}>\r\n+              {product.nomProduit}: ${product.prixProduit}\r\n+              <Link to={`/admin/products/edit/${product.id}`}>Edit</Link>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695857678316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,40 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios.get('http://localhost:8085/products')\r\n+      .then(response => {\r\n+        this.setState({ products: response.data });\r\n+      })\r\n+      .catch(error => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  render() {\r\n+    return (\r\n+        <>\r\n+      <div>\r\n+        <h2>Product List</h2>\r\n+        <Link to=\"/admin/products/create\">Create Product</Link>\r\n+        <ul>\r\n+          {this.state.products.map(product => (\r\n+            <li key={product.id}>\r\n+              {product.nomProduit}: ${product.prixProduit}\r\n+              <Link to={`/admin/products/edit/${product.id}`}>Edit</Link>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      </div>\r\n+      <\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695857899676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,40 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios.get('http://localhost:8085/products')\r\n+      .then(response => {\r\n+        this.setState({ products: response.data });\r\n+      })\r\n+      .catch(error => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  render() {\r\n+    return (\r\n+        <>\r\n+      <div>\r\n+        <h2>Product List</h2>\r\n+        <Link to=\"/admin/product/create\">Create Product</Link>\r\n+        <ul>\r\n+          {this.state.products.map(product => (\r\n+            <li key={product.id}>\r\n+              {product.nomProduit}: ${product.prixProduit}\r\n+              <Link to={`/admin/products/edit/${product.id}`}>Edit</Link>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      </div>\r\n+      </>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695857963297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,10 @@\n       })\r\n       .catch(error => {\r\n         console.error('Error fetching products:', error);\r\n       });\r\n+\r\n+      \r\n   }\r\n \r\n   render() {\r\n     return (\r\n@@ -37,160 +39,4 @@\n   }\r\n }\r\n \r\n export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios.get('http://localhost:8085/products')\r\n-      .then(response => {\r\n-        this.setState({ products: response.data });\r\n-      })\r\n-      .catch(error => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  render() {\r\n-    return (\r\n-        <>\r\n-      <div>\r\n-        <h2>Product List</h2>\r\n-        <Link to=\"/admin/products/create\">Create Product</Link>\r\n-        <ul>\r\n-          {this.state.products.map(product => (\r\n-            <li key={product.id}>\r\n-              {product.nomProduit}: ${product.prixProduit}\r\n-              <Link to={`/admin/products/edit/${product.id}`}>Edit</Link>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      </div>\r\n-      <\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios.get('http://localhost:8085/products')\r\n-      .then(response => {\r\n-        this.setState({ products: response.data });\r\n-      })\r\n-      .catch(error => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  render() {\r\n-    return (\r\n-        <></>\r\n-      <div>\r\n-        <h2>Product List</h2>\r\n-        <Link to=\"/admin/products/create\">Create Product</Link>\r\n-        <ul>\r\n-          {this.state.products.map(product => (\r\n-            <li key={product.id}>\r\n-              {product.nomProduit}: ${product.prixProduit}\r\n-              <Link to={`/admin/products/edit/${product.id}`}>Edit</Link>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios.get('http://localhost:8085/products')\r\n-      .then(response => {\r\n-        this.setState({ products: response.data });\r\n-      })\r\n-      .catch(error => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  render() {\r\n-    return (\r\n-        \r\n-      <div>\r\n-        <h2>Product List</h2>\r\n-        <Link to=\"/admin/products/create\">Create Product</Link>\r\n-        <ul>\r\n-          {this.state.products.map(product => (\r\n-            <li key={product.id}>\r\n-              {product.nomProduit}: ${product.prixProduit}\r\n-              <Link to={`/admin/products/edit/${product.id}`}>Edit</Link>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios.get('http://http://localhost:8085/products')\r\n-      .then(response => {\r\n-        this.setState({ products: response.data });\r\n-      })\r\n-      .catch(error => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  render() {\r\n-    return (\r\n-      <div>\r\n-        <h2>Product List</h2>\r\n-        <Link to=\"/admin/products/create\">Create Product</Link>\r\n-        <ul>\r\n-          {this.state.products.map(product => (\r\n-            <li key={product.id}>\r\n-              {product.nomProduit}: ${product.prixProduit}\r\n-              <Link to={`/admin/products/edit/${product.id}`}>Edit</Link>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n"
                },
                {
                    "date": 1695858016748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,48 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios.get('http://localhost:8085/products')\r\n+      .then(response => {\r\n+        this.setState({ products: response.data });\r\n+      })\r\n+      .catch(error => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+\r\n+      axios.get('http://localhost:8085/products/${productId}')\r\n+      .then(response => {\r\n+        this.setState({ products: response.data });\r\n+      })\r\n+      .catch(error => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  render() {\r\n+    return (\r\n+        <>\r\n+      <div>\r\n+        <h2>Product List</h2>\r\n+        <Link to=\"/admin/product/create\">Create Product</Link>\r\n+        <ul>\r\n+          {this.state.products.map(product => (\r\n+            <li key={product.id}>\r\n+              {product.nomProduit}: ${product.prixProduit}\r\n+              <Link to={`/admin/products/edit/${product.id}`}>Edit</Link>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      </div>\r\n+      </>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695858041344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,48 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios.get('http://localhost:8085/products')\r\n+      .then(response => {\r\n+        this.setState({ products: response.data });\r\n+      })\r\n+      .catch(error => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+\r\n+    //   axios.delete('http://localhost:8085/products/${productId}')\r\n+    //   .then(response => {\r\n+    //     this.setState({ products: response.data });\r\n+    //   })\r\n+    //   .catch(error => {\r\n+    //     console.error('Error fetching products:', error);\r\n+    //   });\r\n+  }\r\n+\r\n+  render() {\r\n+    return (\r\n+        <>\r\n+      <div>\r\n+        <h2>Product List</h2>\r\n+        <Link to=\"/admin/product/create\">Create Product</Link>\r\n+        <ul>\r\n+          {this.state.products.map(product => (\r\n+            <li key={product.id}>\r\n+              {product.nomProduit}: ${product.prixProduit}\r\n+              <Link to={`/admin/products/edit/${product.id}`}>Edit</Link>\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      </div>\r\n+      </>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695922786239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,137 +1,127 @@\n import React, { Component } from 'react';\r\n import axios from 'axios';\r\n import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { saveAs } from 'file-saver'; // Import file-saver library\r\n+import XLSX from 'xlsx'; // Import xlsx library\r\n \r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+\r\n class ProductList extends Component {\r\n   state = {\r\n     products: [],\r\n   };\r\n \r\n   componentDidMount() {\r\n-    axios.get('http://localhost:8085/products')\r\n-      .then(response => {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n         this.setState({ products: response.data });\r\n+\r\n+        // Display a welcome message when the page is loaded\r\n+        toast.info('Welcome to the product list');\r\n       })\r\n-      .catch(error => {\r\n+      .catch((error) => {\r\n         console.error('Error fetching products:', error);\r\n       });\r\n-\r\n-    //   axios.delete('http://localhost:8085/products/${productId}')\r\n-    //   .then(response => {\r\n-    //     this.setState({ products: response.data });\r\n-    //   })\r\n-    //   .catch(error => {\r\n-    //     console.error('Error fetching products:', error);\r\n-    //   });\r\n   }\r\n \r\n-  render() {\r\n-    return (\r\n-        <>\r\n-      <div>\r\n-        <h2>Product List</h2>\r\n-        <Link to=\"/admin/product/create\">Create Product</Link>\r\n-        <ul>\r\n-          {this.state.products.map(product => (\r\n-            <li key={product.id}>\r\n-              {product.nomProduit}: ${product.prixProduit}\r\n-              <Link to={`/admin/products/edit/${product.id}`}>Edit</Link>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      </div>\r\n-      </>\r\n-    );\r\n-  }\r\n-}\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n \r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n+        // Display a success notification when deletion is successful\r\n+        toast.success('Product deleted successfully');\r\n \r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios.get('http://localhost:8085/products')\r\n-      .then(response => {\r\n-        this.setState({ products: response.data });\r\n+        console.log('Product deleted:', response.data);\r\n       })\r\n-      .catch(error => {\r\n-        console.error('Error fetching products:', error);\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n       });\r\n+  };\r\n \r\n-      axios.get('http://localhost:8085/products/${productId}')\r\n-      .then(response => {\r\n-        this.setState({ products: response.data });\r\n-      })\r\n-      .catch(error => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n+  exportToExcel = () => {\r\n+    // Create a new workbook\r\n+    const wb = XLSX.utils.book_new();\r\n+    \r\n+    // Create a worksheet\r\n+    const ws = XLSX.utils.json_to_sheet(this.state.products);\r\n \r\n-  render() {\r\n-    return (\r\n-        <>\r\n-      <div>\r\n-        <h2>Product List</h2>\r\n-        <Link to=\"/admin/product/create\">Create Product</Link>\r\n-        <ul>\r\n-          {this.state.products.map(product => (\r\n-            <li key={product.id}>\r\n-              {product.nomProduit}: ${product.prixProduit}\r\n-              <Link to={`/admin/products/edit/${product.id}`}>Edit</Link>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      </div>\r\n-      </>\r\n-    );\r\n-  }\r\n-}\r\n+    // Add the worksheet to the workbook\r\n+    XLSX.utils.book_append_sheet(wb, ws, 'Product List');\r\n \r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n+    // Generate a blob from the workbook\r\n+    const blob = XLSX.write(wb, { bookType: 'xlsx', type: 'blob' });\r\n \r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n+    // Save the blob as a file using file-saver\r\n+    saveAs(blob, 'product_list.xlsx');\r\n   };\r\n \r\n-  componentDidMount() {\r\n-    axios.get('http://localhost:8085/products')\r\n-      .then(response => {\r\n-        this.setState({ products: response.data });\r\n-      })\r\n-      .catch(error => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n+  render() {\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n \r\n-      \r\n-  }\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <button onClick={this.exportToExcel} className=\"btn btn-success mb-3\">\r\n+          Export to Excel\r\n+        </button>\r\n+        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n+          Create Product\r\n+        </Link>\r\n \r\n-  render() {\r\n-    return (\r\n-        <>\r\n-      <div>\r\n-        <h2>Product List</h2>\r\n-        <Link to=\"/admin/product/create\">Create Product</Link>\r\n-        <ul>\r\n-          {this.state.products.map(product => (\r\n-            <li key={product.id}>\r\n-              {product.nomProduit}: ${product.prixProduit}\r\n-              <Link to={`/admin/products/edit/${product.id}`}>Edit</Link>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th> {/* Ajout de la colonne pour l'image */}\r\n+              <th>Actions</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {this.state.products.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>{product.stockProduit}</td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit} // Utilisation de l'URL de l'image du produit\r\n+                    alt={product.nomProduit} // Texte alternatif pour l'image\r\n+                    style={{ maxWidth: '100px' }} // Ajustement de la largeur si nécessaire\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n       </div>\r\n-      </>\r\n     );\r\n   }\r\n }\r\n \r\n"
                },
                {
                    "date": 1695923085000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,11 +2,9 @@\n import axios from 'axios';\r\n import { Link } from 'react-router-dom';\r\n import { ToastContainer, toast } from 'react-toastify';\r\n import 'react-toastify/dist/ReactToastify.css';\r\n-import { saveAs } from 'file-saver'; // Import file-saver library\r\n-import XLSX from 'xlsx'; // Import xlsx library\r\n-\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n import './ProductList.css'; // Import your custom CSS for styling\r\n \r\n class ProductList extends Component {\r\n   state = {\r\n@@ -17,10 +15,8 @@\n     axios\r\n       .get('http://localhost:8085/products')\r\n       .then((response) => {\r\n         this.setState({ products: response.data });\r\n-\r\n-        // Display a welcome message when the page is loaded\r\n         toast.info('Welcome to the product list');\r\n       })\r\n       .catch((error) => {\r\n         console.error('Error fetching products:', error);\r\n@@ -35,43 +31,30 @@\n           products: prevState.products.filter(\r\n             (product) => product.id !== productId\r\n           ),\r\n         }));\r\n-\r\n-        // Display a success notification when deletion is successful\r\n         toast.success('Product deleted successfully');\r\n-\r\n         console.log('Product deleted:', response.data);\r\n       })\r\n       .catch((error) => {\r\n         console.error('Error deleting product:', error);\r\n       });\r\n   };\r\n \r\n-  exportToExcel = () => {\r\n-    // Create a new workbook\r\n-    const wb = XLSX.utils.book_new();\r\n-    \r\n-    // Create a worksheet\r\n-    const ws = XLSX.utils.json_to_sheet(this.state.products);\r\n-\r\n-    // Add the worksheet to the workbook\r\n-    XLSX.utils.book_append_sheet(wb, ws, 'Product List');\r\n-\r\n-    // Generate a blob from the workbook\r\n-    const blob = XLSX.write(wb, { bookType: 'xlsx', type: 'blob' });\r\n-\r\n-    // Save the blob as a file using file-saver\r\n-    saveAs(blob, 'product_list.xlsx');\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.products); // Call the export function with your product data\r\n   };\r\n \r\n   render() {\r\n     return (\r\n       <div className=\"product-list-container\">\r\n         <ToastContainer />\r\n \r\n         <h2 className=\"mb-3\">Product List</h2>\r\n-        <button onClick={this.exportToExcel} className=\"btn btn-success mb-3\">\r\n+        <button\r\n+          className=\"btn btn-success mb-3\"\r\n+          onClick={this.handleExportToExcel}\r\n+        >\r\n           Export to Excel\r\n         </button>\r\n         <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n           Create Product\r\n@@ -83,9 +66,9 @@\n               <th>Product Name</th>\r\n               <th>Price</th>\r\n               <th>Category</th>\r\n               <th>Stock</th>\r\n-              <th>Image</th> {/* Ajout de la colonne pour l'image */}\r\n+              <th>Image</th>\r\n               <th>Actions</th>\r\n             </tr>\r\n           </thead>\r\n           <tbody>\r\n@@ -96,11 +79,11 @@\n                 <td>{product.categorie}</td>\r\n                 <td>{product.stockProduit}</td>\r\n                 <td>\r\n                   <img\r\n-                    src={product.imageProduit} // Utilisation de l'URL de l'image du produit\r\n-                    alt={product.nomProduit} // Texte alternatif pour l'image\r\n-                    style={{ maxWidth: '100px' }} // Ajustement de la largeur si nécessaire\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n                   />\r\n                 </td>\r\n                 <td>\r\n                   <button\r\n"
                },
                {
                    "date": 1695923095890,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,106 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+\r\n+import './ProductList.css'; // Importez votre fichier CSS personnalisé pour la mise en forme\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data });\r\n+\r\n+        // Affichez un message de bienvenue lorsque la page est chargée\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+\r\n+        // Affichez une notification de succès lors de la suppression réussie\r\n+        toast.success('Product deleted successfully');\r\n+\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  render() {\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n+          Create Product\r\n+        </Link>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th> {/* Ajout de la colonne pour l'image */}\r\n+              <th>Actions</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {this.state.products.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>{product.stockProduit}</td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit} // Utilisation de l'URL de l'image du produit\r\n+                    alt={product.nomProduit} // Texte alternatif pour l'image\r\n+                    style={{ maxWidth: '100px' }} // Ajustement de la largeur si nécessaire\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695923157760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,111 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.products); // Call the export function with your product data\r\n+  };\r\n+\r\n+  render() {\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <button\r\n+          className=\"btn btn-success mb-3\"\r\n+          onClick={this.handleExportToExcel}\r\n+        >\r\n+          Export to Excel\r\n+        </button>\r\n+        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n+          Create Product\r\n+        </Link>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>Actions</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {this.state.products.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>{product.stockProduit}</td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695923536368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,111 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.products); // Call the export function with your product data\r\n+  };\r\n+\r\n+  render() {\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <button\r\n+          className=\"btn btn-success mb-3\"\r\n+          onClick={this.handleExportToExcel}\r\n+        >\r\n+          Export to Excel\r\n+        </button>\r\n+        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n+          Create Product\r\n+        </Link>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {this.state.products.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>{product.stockProduit}</td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695923542423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,112 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.products); // Call the export function with your product data\r\n+  };\r\n+\r\n+  render() {\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <button\r\n+          className=\"btn btn-success mb-3\"\r\n+          onClick={this.handleExportToExcel}\r\n+        >\r\n+          Export to Excel\r\n+        </button>\r\n+        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n+          Create Product\r\n+        </Link>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {this.state.products.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>{product.stockProduit}</td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695923560644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,113 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.products); // Call the export function with your product data\r\n+  };\r\n+\r\n+  render() {\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <button\r\n+          className=\"btn btn-success mb-3\"\r\n+          onClick={this.handleExportToExcel}\r\n+        >\r\n+          Export to Excel\r\n+        </button>\r\n+        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n+          Create Product\r\n+        </Link>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {this.state.products.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>{product.stockProduit}</td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                  \r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695924107346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,125 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.products); // Call the export function with your product data\r\n+  };\r\n+\r\n+  render() {\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <button\r\n+          className=\"btn btn-success mb-3\"\r\n+          onClick={this.handleExportToExcel}\r\n+        >\r\n+          Export to Excel\r\n+        </button>\r\n+        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n+          Create Product\r\n+        </Link>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {this.state.products.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit}\r\n+                  </span></td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                  </td>\r\n+                  <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695924501734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,129 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.products); // Call the export function with your product data\r\n+  };\r\n+\r\n+  render() {\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <button\r\n+          className=\"btn btn-success mb-3\"\r\n+          onClick={this.handleExportToExcel}\r\n+        >\r\n+          Export to Excel\r\n+        </button>\r\n+        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n+          Create Product\r\n+        </Link>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {this.state.products.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                  </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                  </td>\r\n+                  <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695924808152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,129 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.products); // Call the export function with your product data\r\n+  };\r\n+\r\n+  render() {\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <button\r\n+          className=\"btn btn-success mb-3\"\r\n+          onClick={this.handleExportToExcel}\r\n+        >\r\n+          Export to Excel\r\n+        </button>\r\n+        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n+          Create Product\r\n+        </Link>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {this.state.products.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? '0 : Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                  </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                  </td>\r\n+                  <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695924990984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,130 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.products); // Call the export function with your product data\r\n+  };\r\n+\r\n+  render() {\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <button\r\n+          className=\"btn btn-success mb-3\"\r\n+          onClick={this.handleExportToExcel}\r\n+        >\r\n+          Export to Excel\r\n+        </button>\r\n+        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n+          Create Product\r\n+        </Link>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {this.state.products.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                          fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? '0 : Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                  </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                  </td>\r\n+                  <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695926185620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,10 +95,10 @@\n                     {product.stockProduit === 0 ? '0 : Out of Stock' : product.stockProduit}\r\n                   </span>\r\n                   </td>\r\n                 <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n+                <img\r\n+                    src={`data:image/jpeg;base64,${product.imageProduit}`} // Assuming imageProduit contains base64-encoded image data\r\n                     alt={product.nomProduit}\r\n                     style={{ maxWidth: '100px' }}\r\n                   />\r\n                 </td>\r\n"
                },
                {
                    "date": 1695926196381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,130 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.products); // Call the export function with your product data\r\n+  };\r\n+\r\n+  render() {\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <button\r\n+          className=\"btn btn-success mb-3\"\r\n+          onClick={this.handleExportToExcel}\r\n+        >\r\n+          Export to Excel\r\n+        </button>\r\n+        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n+          Create Product\r\n+        </Link>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {this.state.products.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                          \r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? '0 : Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                  </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                  </td>\r\n+                  <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695926377186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,14 @@\n \r\n class ProductList extends Component {\r\n   state = {\r\n     products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n   };\r\n \r\n   componentDidMount() {\r\n     axios\r\n@@ -88,274 +94,15 @@\n                           ? 'red'\r\n                           : product.stockProduit <= 10\r\n                           ? 'orange'\r\n                           : 'green',\r\n-                          \r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? '0 : Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                  </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                  </td>\r\n-                  <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.products); // Call the export function with your product data\r\n-  };\r\n-\r\n-  render() {\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <button\r\n-          className=\"btn btn-success mb-3\"\r\n-          onClick={this.handleExportToExcel}\r\n-        >\r\n-          Export to Excel\r\n-        </button>\r\n-        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n-          Create Product\r\n-        </Link>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {this.state.products.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n                           fontWeight: 'bold',\r\n                     }}\r\n                   >\r\n                     {product.stockProduit === 0 ? '0 : Out of Stock' : product.stockProduit}\r\n                   </span>\r\n                   </td>\r\n                 <td>\r\n-                <img\r\n-                    src={`data:image/jpeg;base64,${product.imageProduit}`} // Assuming imageProduit contains base64-encoded image data\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                  </td>\r\n-                  <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.products); // Call the export function with your product data\r\n-  };\r\n-\r\n-  render() {\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <button\r\n-          className=\"btn btn-success mb-3\"\r\n-          onClick={this.handleExportToExcel}\r\n-        >\r\n-          Export to Excel\r\n-        </button>\r\n-        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n-          Create Product\r\n-        </Link>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {this.state.products.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? '0 : Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                  </td>\r\n-                <td>\r\n                   <img\r\n                     src={product.imageProduit}\r\n                     alt={product.nomProduit}\r\n                     style={{ maxWidth: '100px' }}\r\n@@ -386,922 +133,4 @@\n   }\r\n }\r\n \r\n export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.products); // Call the export function with your product data\r\n-  };\r\n-\r\n-  render() {\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <button\r\n-          className=\"btn btn-success mb-3\"\r\n-          onClick={this.handleExportToExcel}\r\n-        >\r\n-          Export to Excel\r\n-        </button>\r\n-        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n-          Create Product\r\n-        </Link>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {this.state.products.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                  </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                  </td>\r\n-                  <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.products); // Call the export function with your product data\r\n-  };\r\n-\r\n-  render() {\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <button\r\n-          className=\"btn btn-success mb-3\"\r\n-          onClick={this.handleExportToExcel}\r\n-        >\r\n-          Export to Excel\r\n-        </button>\r\n-        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n-          Create Product\r\n-        </Link>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {this.state.products.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit}\r\n-                  </span></td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                  </td>\r\n-                  <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.products); // Call the export function with your product data\r\n-  };\r\n-\r\n-  render() {\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <button\r\n-          className=\"btn btn-success mb-3\"\r\n-          onClick={this.handleExportToExcel}\r\n-        >\r\n-          Export to Excel\r\n-        </button>\r\n-        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n-          Create Product\r\n-        </Link>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {this.state.products.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>{product.stockProduit}</td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                  \r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.products); // Call the export function with your product data\r\n-  };\r\n-\r\n-  render() {\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <button\r\n-          className=\"btn btn-success mb-3\"\r\n-          onClick={this.handleExportToExcel}\r\n-        >\r\n-          Export to Excel\r\n-        </button>\r\n-        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n-          Create Product\r\n-        </Link>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {this.state.products.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>{product.stockProduit}</td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.products); // Call the export function with your product data\r\n-  };\r\n-\r\n-  render() {\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <button\r\n-          className=\"btn btn-success mb-3\"\r\n-          onClick={this.handleExportToExcel}\r\n-        >\r\n-          Export to Excel\r\n-        </button>\r\n-        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n-          Create Product\r\n-        </Link>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {this.state.products.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>{product.stockProduit}</td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.products); // Call the export function with your product data\r\n-  };\r\n-\r\n-  render() {\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <button\r\n-          className=\"btn btn-success mb-3\"\r\n-          onClick={this.handleExportToExcel}\r\n-        >\r\n-          Export to Excel\r\n-        </button>\r\n-        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n-          Create Product\r\n-        </Link>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>Actions</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {this.state.products.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>{product.stockProduit}</td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-\r\n-import './ProductList.css'; // Importez votre fichier CSS personnalisé pour la mise en forme\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data });\r\n-\r\n-        // Affichez un message de bienvenue lorsque la page est chargée\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-\r\n-        // Affichez une notification de succès lors de la suppression réussie\r\n-        toast.success('Product deleted successfully');\r\n-\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  render() {\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n-          Create Product\r\n-        </Link>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th> {/* Ajout de la colonne pour l'image */}\r\n-              <th>Actions</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {this.state.products.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>{product.stockProduit}</td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit} // Utilisation de l'URL de l'image du produit\r\n-                    alt={product.nomProduit} // Texte alternatif pour l'image\r\n-                    style={{ maxWidth: '100px' }} // Ajustement de la largeur si nécessaire\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.products); // Call the export function with your product data\r\n-  };\r\n-\r\n-  render() {\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <button\r\n-          className=\"btn btn-success mb-3\"\r\n-          onClick={this.handleExportToExcel}\r\n-        >\r\n-          Export to Excel\r\n-        </button>\r\n-        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n-          Create Product\r\n-        </Link>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>Actions</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {this.state.products.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>{product.stockProduit}</td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n"
                },
                {
                    "date": 1695926402063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n       });\r\n   };\r\n \r\n   handleExportToExcel = () => {\r\n-    exportToExcel(this.state.products); // Call the export function with your product data\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n   };\r\n \r\n   render() {\r\n     return (\r\n"
                },
                {
                    "date": 1695926431094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n   componentDidMount() {\r\n     axios\r\n       .get('http://localhost:8085/products')\r\n       .then((response) => {\r\n-        this.setState({ products: response.data });\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n         toast.info('Welcome to the product list');\r\n       })\r\n       .catch((error) => {\r\n         console.error('Error fetching products:', error);\r\n@@ -36,8 +36,11 @@\n         this.setState((prevState) => ({\r\n           products: prevState.products.filter(\r\n             (product) => product.id !== productId\r\n           ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n         }));\r\n         toast.success('Product deleted successfully');\r\n         console.log('Product deleted:', response.data);\r\n       })\r\n@@ -49,24 +52,91 @@\n   handleExportToExcel = () => {\r\n     exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n   };\r\n \r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n   render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n     return (\r\n       <div className=\"product-list-container\">\r\n         <ToastContainer />\r\n \r\n         <h2 className=\"mb-3\">Product List</h2>\r\n-        <button\r\n-          className=\"btn btn-success mb-3\"\r\n-          onClick={this.handleExportToExcel}\r\n-        >\r\n-          Export to Excel\r\n-        </button>\r\n-        <Link to=\"/admin/product/create\" className=\"btn btn-primary mb-3\">\r\n-          Create Product\r\n-        </Link>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n \r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <select\r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+          >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Category1\">Category1</option>\r\n+            <option value=\"Category2\">Category2</option>\r\n+            {/* Add more category options as needed */}\r\n+          </select>\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <input\r\n+            type=\"number\"\r\n+            name=\"maxPrice\"\r\n+            value={filters.maxPrice}\r\n+            onChange={this.handleFilterChange}\r\n+          />\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <input\r\n+            type=\"number\"\r\n+            name=\"minStock\"\r\n+            value={filters.minStock}\r\n+            onChange={this.handleFilterChange}\r\n+          />\r\n+        </div>\r\n+\r\n         <table className=\"table table-bordered\">\r\n           <thead className=\"thead-dark\">\r\n             <tr>\r\n               <th>Product Name</th>\r\n@@ -78,15 +148,15 @@\n               <th>EDIT</th>\r\n             </tr>\r\n           </thead>\r\n           <tbody>\r\n-            {this.state.products.map((product) => (\r\n+            {filteredProducts.map((product) => (\r\n               <tr key={product.id}>\r\n                 <td>{product.nomProduit}</td>\r\n                 <td>${product.prixProduit}</td>\r\n                 <td>{product.categorie}</td>\r\n                 <td>\r\n-                <span\r\n+                  <span\r\n                     style={{\r\n                       color:\r\n                         product.stockProduit === 0\r\n                           ? 'red'\r\n@@ -94,14 +164,14 @@\n                           ? 'red'\r\n                           : product.stockProduit <= 10\r\n                           ? 'orange'\r\n                           : 'green',\r\n-                          fontWeight: 'bold',\r\n+                      fontWeight: 'bold',\r\n                     }}\r\n                   >\r\n-                    {product.stockProduit === 0 ? '0 : Out of Stock' : product.stockProduit}\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n                   </span>\r\n-                  </td>\r\n+                </td>\r\n                 <td>\r\n                   <img\r\n                     src={product.imageProduit}\r\n                     alt={product.nomProduit}\r\n@@ -114,10 +184,10 @@\n                     className=\"btn btn-danger btn-sm\"\r\n                   >\r\n                     Delete\r\n                   </button>\r\n-                  </td>\r\n-                  <td>\r\n+                </td>\r\n+                <td>\r\n                   <Link\r\n                     to={`/admin/products/${product.id}`}\r\n                     className=\"btn btn-primary btn-sm ml-2\"\r\n                   >\r\n"
                },
                {
                    "date": 1695926570854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,10 +115,16 @@\n             value={filters.category}\r\n             onChange={this.handleFilterChange}\r\n           >\r\n             <option value=\"\">All</option>\r\n-            <option value=\"Category1\">Category1</option>\r\n-            <option value=\"Category2\">Category2</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+                        <option value=\"Sculpture\">Sculpture</option>\r\n+                        <option value=\"Drawing\">Drawing</option>\r\n+                        <option value=\"Photography\">Photography</option>\r\n+                        <option value=\"Pottery\">Pottery</option>\r\n+                        <option value=\"Printmaking\">Printmaking</option>\r\n+                        <option value=\"Textile_Arts\">Textile Arts</option>\r\n+                        <option value=\"Mixed_Media\">Mixed Media</option>\r\n             {/* Add more category options as needed */}\r\n           </select>\r\n           <label className=\"ml-3 mr-2\">Max Price:</label>\r\n           <input\r\n"
                },
                {
                    "date": 1695926607659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,235 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import { Form, Button, Row, Col, Card } from 'react-bootstrap';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '',\r\n+      maxPrice: '',\r\n+      minStock: '',\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts);\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        <Card className=\"mb-3\">\r\n+          <Card.Body>\r\n+            <Form>\r\n+              <Row>\r\n+                <Col xs={12} md={3} className=\"mb-3\">\r\n+                  <Form.Group>\r\n+                    <Form.Label>Filter by Category</Form.Label>\r\n+                    <Form.Control\r\n+                      as=\"select\"\r\n+                      name=\"category\"\r\n+                      value={filters.category}\r\n+                      onChange={this.handleFilterChange}\r\n+                    >\r\n+                      <option value=\"\">All</option>\r\n+                      <option value=\"Category1\">Category1</option>\r\n+                      <option value=\"Category2\">Category2</option>\r\n+                      {/* Add more category options as needed */}\r\n+                    </Form.Control>\r\n+                  </Form.Group>\r\n+                </Col>\r\n+                <Col xs={12} md={3} className=\"mb-3\">\r\n+                  <Form.Group>\r\n+                    <Form.Label>Max Price</Form.Label>\r\n+                    <Form.Control\r\n+                      type=\"number\"\r\n+                      name=\"maxPrice\"\r\n+                      value={filters.maxPrice}\r\n+                      onChange={this.handleFilterChange}\r\n+                    />\r\n+                  </Form.Group>\r\n+                </Col>\r\n+                <Col xs={12} md={3} className=\"mb-3\">\r\n+                  <Form.Group>\r\n+                    <Form.Label>Min Stock</Form.Label>\r\n+                    <Form.Control\r\n+                      type=\"number\"\r\n+                      name=\"minStock\"\r\n+                      value={filters.minStock}\r\n+                      onChange={this.handleFilterChange}\r\n+                    />\r\n+                  </Form.Group>\r\n+                </Col>\r\n+                <Col xs={12} md={3} className=\"d-flex align-items-end\">\r\n+                  <Button\r\n+                    variant=\"primary\"\r\n+                    className=\"w-100\"\r\n+                    onClick={this.filterProducts}\r\n+                  >\r\n+                    Apply Filters\r\n+                  </Button>\r\n+                </Col>\r\n+              </Row>\r\n+            </Form>\r\n+          </Card.Body>\r\n+        </Card>\r\n+\r\n+        {/* Product Table */}\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695926724314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,212 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <select\r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+          >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+                        <option value=\"Sculpture\">Sculpture</option>\r\n+                        <option value=\"Drawing\">Drawing</option>\r\n+                        <option value=\"Photography\">Photography</option>\r\n+                        <option value=\"Pottery\">Pottery</option>\r\n+                        <option value=\"Printmaking\">Printmaking</option>\r\n+                        <option value=\"Textile_Arts\">Textile Arts</option>\r\n+                        <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+          </select>\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <input\r\n+            type=\"number\"\r\n+            name=\"maxPrice\"\r\n+            value={filters.maxPrice}\r\n+            onChange={this.handleFilterChange}\r\n+          />\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <input\r\n+            type=\"number\"\r\n+            name=\"minStock\"\r\n+            value={filters.minStock}\r\n+            onChange={this.handleFilterChange}\r\n+          />\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695926738637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,212 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <select\r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+          >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+                        <option value=\"Sculpture\">Sculpture</option>\r\n+                        <option value=\"Drawing\">Drawing</option>\r\n+                        <option value=\"Photography\">Photography</option>\r\n+                        <option value=\"Pottery\">Pottery</option>\r\n+                        <option value=\"Printmaking\">Printmaking</option>\r\n+                        <option value=\"Textile_Arts\">Textile Arts</option>\r\n+                        <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+          </select>\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <input\r\n+            type=\"number\"\r\n+            name=\"maxPrice\"\r\n+            value={filters.maxPrice}\r\n+            onChange={this.handleFilterChange}\r\n+          />\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <input\r\n+            type=\"number\"\r\n+            name=\"minStock\"\r\n+            value={filters.minStock}\r\n+            onChange={this.handleFilterChange}\r\n+          />\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695926914107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,229 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <select\r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+          >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Category1\">Category1</option>\r\n+            <option value=\"Category2\">Category2</option>\r\n+            {/* Add more category options as needed */}\r\n+          </select>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927076394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,235 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <select\r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+          >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+                        <option value=\"Sculpture\">Sculpture</option>\r\n+                        <option value=\"Drawing\">Drawing</option>\r\n+                        <option value=\"Photography\">Photography</option>\r\n+                        <option value=\"Pottery\">Pottery</option>\r\n+                        <option value=\"Printmaking\">Printmaking</option>\r\n+                        <option value=\"Textile_Arts\">Textile Arts</option>\r\n+                        <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+          </select>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927086253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,235 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <select\r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+          >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+          </select>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927109847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,236 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+                      type=\"select\" \r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+          >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+          </select>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927116307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,236 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+          type=\"select\" \r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+         />\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+          </select>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927127881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,236 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+          type=\"select\" \r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+         />\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+            </Input>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927146726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,237 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Button, Form, FormGroup, Label, Input, Row, Col, Card, CardHeader, CardBody, CardFooter, CardTitle } from 'reactstrap';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+          type=\"select\" \r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+         >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+            </Input>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927152446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,237 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+          type=\"select\" \r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+         >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+            </Input>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927192185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,238 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input } from 'reactstrap';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+        <FormGroup>\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+          type=\"select\" \r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+         >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+            </Input>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927201206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,238 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input } from 'reactstrap';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+        <FormGroup>\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+          type=\"select\" \r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+         >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+            </Input>\r\n+            </FormGroup>\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927209718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,238 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input } from 'reactstrap';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+        <FormGroup>\r\n+          <Label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+          type=\"select\" \r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+         >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+            </Input>\r\n+            </FormGroup>\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927227186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,238 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input,FormGroup, Label, } from 'reactstrap';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+        <FormGroup>\r\n+          <Label className=\"mr-2\">Filter by Category:</Label>\r\n+          <Input\r\n+          type=\"select\" \r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+         >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+            </Input>\r\n+            </FormGroup>\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927265998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,239 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input ,FormGroup, Label } from 'reactstrap';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          \r\n+        <FormGroup>\r\n+          <Label className=\"mr-2\">Filter by Category:</Label>\r\n+          <Input\r\n+          type=\"select\" \r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+         >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+            </Input>\r\n+            </FormGroup>\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927275991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,240 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input ,FormGroup, Label } from 'reactstrap';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+        <Col md=\"8\">\r\n+        <FormGroup>\r\n+          <Label className=\"mr-2\">Filter by Category:</Label>\r\n+          <Input\r\n+          type=\"select\" \r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+         >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+            </Input>\r\n+            </FormGroup>\r\n+            <Col md=\"8\"></Col>\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927289227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,240 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input ,FormGroup, Label ,Col } from 'reactstrap';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+        <Col md=\"8\">\r\n+        <FormGroup>\r\n+          <Label className=\"mr-2\">Filter by Category:</Label>\r\n+          <Input\r\n+          type=\"select\" \r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+         >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+            </Input>\r\n+            </FormGroup>\r\n+            </Col>\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927310777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,240 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input ,FormGroup, Label , Col } from 'reactstrap';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+        <Col md=\"3\">\r\n+        <FormGroup>\r\n+          <Label className=\"mr-2\">Filter by Category:</Label>\r\n+          <Input\r\n+          type=\"select\" \r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+         >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+            </Input>\r\n+            </FormGroup>\r\n+            </Col>\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927320287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,240 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input ,FormGroup, Label , Col } from 'reactstrap';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+        <Col md=\"3\">\r\n+        <FormGroup>\r\n+          <Label className=\"mr-2\">Filter by Category:</Label>\r\n+          <Input\r\n+          type=\"select\" \r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+         >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+            </Input>\r\n+            </FormGroup>\r\n+            \r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927339408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,241 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input ,FormGroup, Label , Col } from 'reactstrap';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+        <Row md=\"3\">\r\n+        <FormGroup>\r\n+          <Label className=\"mr-2\">Filter by Category:</Label>\r\n+          <Input\r\n+          type=\"select\" \r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+         >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+            </Input>\r\n+            </FormGroup>\r\n+            \r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+          </Col>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927347326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,241 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input ,FormGroup, Label , Row } from 'reactstrap';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+        <Row md=\"3\">\r\n+        <FormGroup>\r\n+          <Label className=\"mr-2\">Filter by Category:</Label>\r\n+          <Input\r\n+          type=\"select\" \r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+         >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+            </Input>\r\n+            </FormGroup>\r\n+            \r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+          </Row>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927384526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,241 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input ,FormGroup, Label , Row } from 'reactstrap';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+        <Row md=\"3\">\r\n+        <FormGroup>\r\n+          <Label className=\"mr-3\">Filter by Category:</Label>\r\n+          <Input\r\n+          type=\"select\" \r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+         >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+            </Input>\r\n+            </FormGroup>\r\n+            \r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+          </Row>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927393078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,241 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input ,FormGroup, Label , Row } from 'reactstrap';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+        <Row md=\"3\">\r\n+        <FormGroup>\r\n+          <Label >Filter by Category:</Label>\r\n+          <Input\r\n+          type=\"select\" \r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+         >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+            </Input>\r\n+            </FormGroup>\r\n+            \r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+          </Row>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927404163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,238 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input } from 'reactstrap';\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+        <FormGroup>\r\n+          <Label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+          type=\"select\" \r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+         >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+            </Input>\r\n+            </FormGroup>\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927416846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,8 @@\n import 'react-toastify/dist/ReactToastify.css';\r\n import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n import './ProductList.css'; // Import your custom CSS for styling\r\n import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input } from 'reactstrap';\r\n \r\n class ProductList extends Component {\r\n   state = {\r\n     products: [],\r\n@@ -124,4543 +123,9 @@\n         </div>\r\n \r\n         {/* Filters */}\r\n         <div className=\"mb-3\">\r\n-        <FormGroup>\r\n-          <Label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-          type=\"select\" \r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-         >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-            </Input>\r\n-            </FormGroup>\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input ,FormGroup, Label , Row } from 'reactstrap';\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-        <Row md=\"3\">\r\n-        <FormGroup>\r\n-          <Label >Filter by Category:</Label>\r\n-          <Input\r\n-          type=\"select\" \r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-         >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-            </Input>\r\n-            </FormGroup>\r\n-            \r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-          </Row>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input ,FormGroup, Label , Row } from 'reactstrap';\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-        <Row md=\"3\">\r\n-        <FormGroup>\r\n-          <Label className=\"mr-3\">Filter by Category:</Label>\r\n-          <Input\r\n-          type=\"select\" \r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-         >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-            </Input>\r\n-            </FormGroup>\r\n-            \r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-          </Row>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input ,FormGroup, Label , Row } from 'reactstrap';\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-        <Row md=\"3\">\r\n-        <FormGroup>\r\n-          <Label className=\"mr-2\">Filter by Category:</Label>\r\n-          <Input\r\n-          type=\"select\" \r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-         >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-            </Input>\r\n-            </FormGroup>\r\n-            \r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-          </Row>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input ,FormGroup, Label , Col } from 'reactstrap';\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-        <Row md=\"3\">\r\n-        <FormGroup>\r\n-          <Label className=\"mr-2\">Filter by Category:</Label>\r\n-          <Input\r\n-          type=\"select\" \r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-         >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-            </Input>\r\n-            </FormGroup>\r\n-            \r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-          </Col>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input ,FormGroup, Label , Col } from 'reactstrap';\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-        <Col md=\"3\">\r\n-        <FormGroup>\r\n-          <Label className=\"mr-2\">Filter by Category:</Label>\r\n-          <Input\r\n-          type=\"select\" \r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-         >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-            </Input>\r\n-            </FormGroup>\r\n-            \r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input ,FormGroup, Label , Col } from 'reactstrap';\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-        <Col md=\"3\">\r\n-        <FormGroup>\r\n-          <Label className=\"mr-2\">Filter by Category:</Label>\r\n-          <Input\r\n-          type=\"select\" \r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-         >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-            </Input>\r\n-            </FormGroup>\r\n-            </Col>\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input ,FormGroup, Label ,Col } from 'reactstrap';\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-        <Col md=\"8\">\r\n-        <FormGroup>\r\n-          <Label className=\"mr-2\">Filter by Category:</Label>\r\n-          <Input\r\n-          type=\"select\" \r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-         >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-            </Input>\r\n-            </FormGroup>\r\n-            </Col>\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input ,FormGroup, Label } from 'reactstrap';\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-        <Col md=\"8\">\r\n-        <FormGroup>\r\n-          <Label className=\"mr-2\">Filter by Category:</Label>\r\n-          <Input\r\n-          type=\"select\" \r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-         >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-            </Input>\r\n-            </FormGroup>\r\n-            <Col md=\"8\"></Col>\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input ,FormGroup, Label } from 'reactstrap';\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          \r\n-        <FormGroup>\r\n-          <Label className=\"mr-2\">Filter by Category:</Label>\r\n-          <Input\r\n-          type=\"select\" \r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-         >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-            </Input>\r\n-            </FormGroup>\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input,FormGroup, Label, } from 'reactstrap';\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-        <FormGroup>\r\n-          <Label className=\"mr-2\">Filter by Category:</Label>\r\n-          <Input\r\n-          type=\"select\" \r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-         >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-            </Input>\r\n-            </FormGroup>\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input } from 'reactstrap';\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-        <FormGroup>\r\n-          <Label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-          type=\"select\" \r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-         >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-            </Input>\r\n-            </FormGroup>\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input } from 'reactstrap';\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-        <FormGroup>\r\n           <label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-          type=\"select\" \r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-         >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-            </Input>\r\n-            </FormGroup>\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input } from 'reactstrap';\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-        <FormGroup>\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-          type=\"select\" \r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-         >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-            </Input>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-          type=\"select\" \r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-         >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-            </Input>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Button, Form, FormGroup, Label, Input, Row, Col, Card, CardHeader, CardBody, CardFooter, CardTitle } from 'reactstrap';\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-          type=\"select\" \r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-         >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-            </Input>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-          type=\"select\" \r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-         />\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-            </Input>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-          type=\"select\" \r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-         />\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-          </select>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-                      type=\"select\" \r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-          >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-          </select>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n           <select\r\n             name=\"category\"\r\n             value={filters.category}\r\n             onChange={this.handleFilterChange}\r\n@@ -4767,1339 +232,4 @@\n   }\r\n }\r\n \r\n export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <select\r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-          >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-                        <option value=\"Sculpture\">Sculpture</option>\r\n-                        <option value=\"Drawing\">Drawing</option>\r\n-                        <option value=\"Photography\">Photography</option>\r\n-                        <option value=\"Pottery\">Pottery</option>\r\n-                        <option value=\"Printmaking\">Printmaking</option>\r\n-                        <option value=\"Textile_Arts\">Textile Arts</option>\r\n-                        <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-          </select>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <select\r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-          >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Category1\">Category1</option>\r\n-            <option value=\"Category2\">Category2</option>\r\n-            {/* Add more category options as needed */}\r\n-          </select>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <select\r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-          >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-                        <option value=\"Sculpture\">Sculpture</option>\r\n-                        <option value=\"Drawing\">Drawing</option>\r\n-                        <option value=\"Photography\">Photography</option>\r\n-                        <option value=\"Pottery\">Pottery</option>\r\n-                        <option value=\"Printmaking\">Printmaking</option>\r\n-                        <option value=\"Textile_Arts\">Textile Arts</option>\r\n-                        <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-          </select>\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <input\r\n-            type=\"number\"\r\n-            name=\"maxPrice\"\r\n-            value={filters.maxPrice}\r\n-            onChange={this.handleFilterChange}\r\n-          />\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <input\r\n-            type=\"number\"\r\n-            name=\"minStock\"\r\n-            value={filters.minStock}\r\n-            onChange={this.handleFilterChange}\r\n-          />\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <select\r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-          >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-                        <option value=\"Sculpture\">Sculpture</option>\r\n-                        <option value=\"Drawing\">Drawing</option>\r\n-                        <option value=\"Photography\">Photography</option>\r\n-                        <option value=\"Pottery\">Pottery</option>\r\n-                        <option value=\"Printmaking\">Printmaking</option>\r\n-                        <option value=\"Textile_Arts\">Textile Arts</option>\r\n-                        <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-          </select>\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <input\r\n-            type=\"number\"\r\n-            name=\"maxPrice\"\r\n-            value={filters.maxPrice}\r\n-            onChange={this.handleFilterChange}\r\n-          />\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <input\r\n-            type=\"number\"\r\n-            name=\"minStock\"\r\n-            value={filters.minStock}\r\n-            onChange={this.handleFilterChange}\r\n-          />\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import { Form, Button, Row, Col, Card } from 'react-bootstrap';\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '',\r\n-      maxPrice: '',\r\n-      minStock: '',\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts);\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        <Card className=\"mb-3\">\r\n-          <Card.Body>\r\n-            <Form>\r\n-              <Row>\r\n-                <Col xs={12} md={3} className=\"mb-3\">\r\n-                  <Form.Group>\r\n-                    <Form.Label>Filter by Category</Form.Label>\r\n-                    <Form.Control\r\n-                      as=\"select\"\r\n-                      name=\"category\"\r\n-                      value={filters.category}\r\n-                      onChange={this.handleFilterChange}\r\n-                    >\r\n-                      <option value=\"\">All</option>\r\n-                      <option value=\"Category1\">Category1</option>\r\n-                      <option value=\"Category2\">Category2</option>\r\n-                      {/* Add more category options as needed */}\r\n-                    </Form.Control>\r\n-                  </Form.Group>\r\n-                </Col>\r\n-                <Col xs={12} md={3} className=\"mb-3\">\r\n-                  <Form.Group>\r\n-                    <Form.Label>Max Price</Form.Label>\r\n-                    <Form.Control\r\n-                      type=\"number\"\r\n-                      name=\"maxPrice\"\r\n-                      value={filters.maxPrice}\r\n-                      onChange={this.handleFilterChange}\r\n-                    />\r\n-                  </Form.Group>\r\n-                </Col>\r\n-                <Col xs={12} md={3} className=\"mb-3\">\r\n-                  <Form.Group>\r\n-                    <Form.Label>Min Stock</Form.Label>\r\n-                    <Form.Control\r\n-                      type=\"number\"\r\n-                      name=\"minStock\"\r\n-                      value={filters.minStock}\r\n-                      onChange={this.handleFilterChange}\r\n-                    />\r\n-                  </Form.Group>\r\n-                </Col>\r\n-                <Col xs={12} md={3} className=\"d-flex align-items-end\">\r\n-                  <Button\r\n-                    variant=\"primary\"\r\n-                    className=\"w-100\"\r\n-                    onClick={this.filterProducts}\r\n-                  >\r\n-                    Apply Filters\r\n-                  </Button>\r\n-                </Col>\r\n-              </Row>\r\n-            </Form>\r\n-          </Card.Body>\r\n-        </Card>\r\n-\r\n-        {/* Product Table */}\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <select\r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-          >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-                        <option value=\"Sculpture\">Sculpture</option>\r\n-                        <option value=\"Drawing\">Drawing</option>\r\n-                        <option value=\"Photography\">Photography</option>\r\n-                        <option value=\"Pottery\">Pottery</option>\r\n-                        <option value=\"Printmaking\">Printmaking</option>\r\n-                        <option value=\"Textile_Arts\">Textile Arts</option>\r\n-                        <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-          </select>\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <input\r\n-            type=\"number\"\r\n-            name=\"maxPrice\"\r\n-            value={filters.maxPrice}\r\n-            onChange={this.handleFilterChange}\r\n-          />\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <input\r\n-            type=\"number\"\r\n-            name=\"minStock\"\r\n-            value={filters.minStock}\r\n-            onChange={this.handleFilterChange}\r\n-          />\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n"
                },
                {
                    "date": 1695927424153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,235 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+          >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+          </Input>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927429625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,236 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+          type\r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+          >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+          </Input>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927436223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,236 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+          type=select\"\r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+          >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+          </Input>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927449074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,236 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Button,\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+          type=\"select\"\r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+          >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+          </Input>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927455524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,236 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Button } from 'reactstrap';\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+          type=\"select\"\r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+          >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+          </Input>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927462144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,236 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input } from 'reactstrap';\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+          type=\"select\"\r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+          >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+          </Input>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927474730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,236 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input } from 'reactstrap';\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+          type=\"select\"\r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+          >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+          </Input>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927507969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,237 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input } from 'reactstrap';\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+          className=''\r\n+          type=\"select\"\r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+          >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+          </Input>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927516115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,237 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input } from 'reactstrap';\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+          className=\"md-3\"\r\n+          type=\"select\"\r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+          >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+          </Input>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927521877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,237 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input } from 'reactstrap';\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+          className=\"md-2\"\r\n+          type=\"select\"\r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+          >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+          </Input>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927537095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,237 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input } from 'reactstrap';\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+          \r\n+          type=\"select\"\r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+          >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+          </Input>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927542956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,237 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input } from 'reactstrap';\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+          md=\"8\"\r\n+          type=\"select\"\r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+          >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+          </Input>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927548546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,237 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input } from 'reactstrap';\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+          md=\"3\"\r\n+          type=\"select\"\r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+          >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+          </Input>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927581735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,236 @@\n+import React, { Component } from 'react';\r\n+import axios from 'axios';\r\n+import { Link } from 'react-router-dom';\r\n+import { ToastContainer, toast } from 'react-toastify';\r\n+import 'react-toastify/dist/ReactToastify.css';\r\n+import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n+import './ProductList.css'; // Import your custom CSS for styling\r\n+import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n+import { Input } from 'reactstrap';\r\n+class ProductList extends Component {\r\n+  state = {\r\n+    products: [],\r\n+    filteredProducts: [],\r\n+    filters: {\r\n+      category: '', // Initialize category filter to empty string\r\n+      maxPrice: '', // Initialize maxPrice filter to empty string\r\n+      minStock: '', // Initialize minStock filter to empty string\r\n+    },\r\n+  };\r\n+\r\n+  componentDidMount() {\r\n+    axios\r\n+      .get('http://localhost:8085/products')\r\n+      .then((response) => {\r\n+        this.setState({ products: response.data, filteredProducts: response.data });\r\n+        toast.info('Welcome to the product list');\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error fetching products:', error);\r\n+      });\r\n+  }\r\n+\r\n+  handleDelete = (productId) => {\r\n+    axios\r\n+      .delete(`http://localhost:8085/products/${productId}`)\r\n+      .then((response) => {\r\n+        this.setState((prevState) => ({\r\n+          products: prevState.products.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+          filteredProducts: prevState.filteredProducts.filter(\r\n+            (product) => product.id !== productId\r\n+          ),\r\n+        }));\r\n+        toast.success('Product deleted successfully');\r\n+        console.log('Product deleted:', response.data);\r\n+      })\r\n+      .catch((error) => {\r\n+        console.error('Error deleting product:', error);\r\n+      });\r\n+  };\r\n+\r\n+  handleExportToExcel = () => {\r\n+    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n+  };\r\n+\r\n+  handleFilterChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  handleSliderChange = (name, value) => {\r\n+    this.setState(\r\n+      (prevState) => ({\r\n+        filters: {\r\n+          ...prevState.filters,\r\n+          [name]: value,\r\n+        },\r\n+      }),\r\n+      () => {\r\n+        this.filterProducts();\r\n+      }\r\n+    );\r\n+  };\r\n+\r\n+  filterProducts = () => {\r\n+    const { products, filters } = this.state;\r\n+\r\n+    const filteredProducts = products.filter((product) => {\r\n+      const categoryMatch =\r\n+        !filters.category || product.categorie === filters.category;\r\n+\r\n+      const maxPriceMatch =\r\n+        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n+\r\n+      const minStockMatch =\r\n+        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n+\r\n+      return categoryMatch && maxPriceMatch && minStockMatch;\r\n+    });\r\n+\r\n+    this.setState({ filteredProducts });\r\n+  };\r\n+\r\n+  render() {\r\n+    const { filters, filteredProducts } = this.state;\r\n+\r\n+    return (\r\n+      <div className=\"product-list-container\">\r\n+        <ToastContainer />\r\n+\r\n+        <h2 className=\"mb-3\">Product List</h2>\r\n+        <div className=\"mb-3\">\r\n+          <button\r\n+            className=\"btn btn-success mr-2\"\r\n+            onClick={this.handleExportToExcel}\r\n+          >\r\n+            Export to Excel\r\n+          </button>\r\n+          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n+            Create Product\r\n+          </Link>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"mb-3\">\r\n+          <label className=\"mr-2\">Filter by Category:</label>\r\n+          <Input\r\n+          type=\"select\"\r\n+            name=\"category\"\r\n+            value={filters.category}\r\n+            onChange={this.handleFilterChange}\r\n+          >\r\n+            <option value=\"\">All</option>\r\n+            <option value=\"Painting\">Painting</option>\r\n+            <option value=\"Sculpture\">Sculpture</option>\r\n+            <option value=\"Drawing\">Drawing</option>\r\n+            <option value=\"Photography\">Photography</option>\r\n+            <option value=\"Pottery\">Pottery</option>\r\n+            <option value=\"Printmaking\">Printmaking</option>\r\n+            <option value=\"Textile_Arts\">Textile Arts</option>\r\n+            <option value=\"Mixed_Media\">Mixed Media</option>\r\n+            {/* Add more category options as needed */}\r\n+          </Input>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={1000}\r\n+            x={parseFloat(filters.maxPrice)}\r\n+            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n+          />\r\n+          <span>{filters.maxPrice}</span>\r\n+\r\n+          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n+          <InputSlider\r\n+            axis=\"x\"\r\n+            xstep={1}\r\n+            xmin={0}\r\n+            xmax={100}\r\n+            x={parseFloat(filters.minStock)}\r\n+            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n+          />\r\n+          <span>{filters.minStock}</span>\r\n+        </div>\r\n+\r\n+        <table className=\"table table-bordered\">\r\n+          <thead className=\"thead-dark\">\r\n+            <tr>\r\n+              <th>Product Name</th>\r\n+              <th>Price</th>\r\n+              <th>Category</th>\r\n+              <th>Stock</th>\r\n+              <th>Image</th>\r\n+              <th>DELETE</th>\r\n+              <th>EDIT</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody>\r\n+            {filteredProducts.map((product) => (\r\n+              <tr key={product.id}>\r\n+                <td>{product.nomProduit}</td>\r\n+                <td>${product.prixProduit}</td>\r\n+                <td>{product.categorie}</td>\r\n+                <td>\r\n+                  <span\r\n+                    style={{\r\n+                      color:\r\n+                        product.stockProduit === 0\r\n+                          ? 'red'\r\n+                          : product.stockProduit < 5\r\n+                          ? 'red'\r\n+                          : product.stockProduit <= 10\r\n+                          ? 'orange'\r\n+                          : 'green',\r\n+                      fontWeight: 'bold',\r\n+                    }}\r\n+                  >\r\n+                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n+                  </span>\r\n+                </td>\r\n+                <td>\r\n+                  <img\r\n+                    src={product.imageProduit}\r\n+                    alt={product.nomProduit}\r\n+                    style={{ maxWidth: '100px' }}\r\n+                  />\r\n+                </td>\r\n+                <td>\r\n+                  <button\r\n+                    onClick={() => this.handleDelete(product.id)}\r\n+                    className=\"btn btn-danger btn-sm\"\r\n+                  >\r\n+                    Delete\r\n+                  </button>\r\n+                </td>\r\n+                <td>\r\n+                  <Link\r\n+                    to={`/admin/products/${product.id}`}\r\n+                    className=\"btn btn-primary btn-sm ml-2\"\r\n+                  >\r\n+                    Edit\r\n+                  </Link>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+export default ProductList;\r\n"
                },
                {
                    "date": 1695927593441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,8 +123,10 @@\n         </div>\r\n \r\n         {/* Filters */}\r\n         <div className=\"mb-3\">\r\n+        <Row>\r\n+          <Col md=\"8\">\r\n           <label className=\"mr-2\">Filter by Category:</label>\r\n           <Input\r\n           type=\"select\"\r\n             name=\"category\"\r\n@@ -233,3312 +235,4 @@\n   }\r\n }\r\n \r\n export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input } from 'reactstrap';\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-          md=\"3\"\r\n-          type=\"select\"\r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-          >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-          </Input>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input } from 'reactstrap';\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-          md=\"8\"\r\n-          type=\"select\"\r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-          >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-          </Input>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input } from 'reactstrap';\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-          \r\n-          type=\"select\"\r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-          >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-          </Input>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input } from 'reactstrap';\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-          className=\"md-2\"\r\n-          type=\"select\"\r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-          >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-          </Input>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input } from 'reactstrap';\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-          className=\"md-3\"\r\n-          type=\"select\"\r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-          >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-          </Input>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input } from 'reactstrap';\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-          className=''\r\n-          type=\"select\"\r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-          >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-          </Input>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input } from 'reactstrap';\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-          type=\"select\"\r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-          >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-          </Input>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input } from 'reactstrap';\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-          type=\"select\"\r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-          >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-          </Input>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Button } from 'reactstrap';\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-          type=\"select\"\r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-          >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-          </Input>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Button,\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-          type=\"select\"\r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-          >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-          </Input>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-          type=select\"\r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-          >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-          </Input>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-          type\r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-          >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-          </Input>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <Input\r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-          >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-          </Input>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n-import React, { Component } from 'react';\r\n-import axios from 'axios';\r\n-import { Link } from 'react-router-dom';\r\n-import { ToastContainer, toast } from 'react-toastify';\r\n-import 'react-toastify/dist/ReactToastify.css';\r\n-import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n-import './ProductList.css'; // Import your custom CSS for styling\r\n-import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-\r\n-class ProductList extends Component {\r\n-  state = {\r\n-    products: [],\r\n-    filteredProducts: [],\r\n-    filters: {\r\n-      category: '', // Initialize category filter to empty string\r\n-      maxPrice: '', // Initialize maxPrice filter to empty string\r\n-      minStock: '', // Initialize minStock filter to empty string\r\n-    },\r\n-  };\r\n-\r\n-  componentDidMount() {\r\n-    axios\r\n-      .get('http://localhost:8085/products')\r\n-      .then((response) => {\r\n-        this.setState({ products: response.data, filteredProducts: response.data });\r\n-        toast.info('Welcome to the product list');\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error fetching products:', error);\r\n-      });\r\n-  }\r\n-\r\n-  handleDelete = (productId) => {\r\n-    axios\r\n-      .delete(`http://localhost:8085/products/${productId}`)\r\n-      .then((response) => {\r\n-        this.setState((prevState) => ({\r\n-          products: prevState.products.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-          filteredProducts: prevState.filteredProducts.filter(\r\n-            (product) => product.id !== productId\r\n-          ),\r\n-        }));\r\n-        toast.success('Product deleted successfully');\r\n-        console.log('Product deleted:', response.data);\r\n-      })\r\n-      .catch((error) => {\r\n-        console.error('Error deleting product:', error);\r\n-      });\r\n-  };\r\n-\r\n-  handleExportToExcel = () => {\r\n-    exportToExcel(this.state.filteredProducts); // Export the filtered products\r\n-  };\r\n-\r\n-  handleFilterChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  handleSliderChange = (name, value) => {\r\n-    this.setState(\r\n-      (prevState) => ({\r\n-        filters: {\r\n-          ...prevState.filters,\r\n-          [name]: value,\r\n-        },\r\n-      }),\r\n-      () => {\r\n-        this.filterProducts();\r\n-      }\r\n-    );\r\n-  };\r\n-\r\n-  filterProducts = () => {\r\n-    const { products, filters } = this.state;\r\n-\r\n-    const filteredProducts = products.filter((product) => {\r\n-      const categoryMatch =\r\n-        !filters.category || product.categorie === filters.category;\r\n-\r\n-      const maxPriceMatch =\r\n-        !filters.maxPrice || parseFloat(product.prixProduit) <= filters.maxPrice;\r\n-\r\n-      const minStockMatch =\r\n-        !filters.minStock || parseInt(product.stockProduit, 10) >= filters.minStock;\r\n-\r\n-      return categoryMatch && maxPriceMatch && minStockMatch;\r\n-    });\r\n-\r\n-    this.setState({ filteredProducts });\r\n-  };\r\n-\r\n-  render() {\r\n-    const { filters, filteredProducts } = this.state;\r\n-\r\n-    return (\r\n-      <div className=\"product-list-container\">\r\n-        <ToastContainer />\r\n-\r\n-        <h2 className=\"mb-3\">Product List</h2>\r\n-        <div className=\"mb-3\">\r\n-          <button\r\n-            className=\"btn btn-success mr-2\"\r\n-            onClick={this.handleExportToExcel}\r\n-          >\r\n-            Export to Excel\r\n-          </button>\r\n-          <Link to=\"/admin/product/create\" className=\"btn btn-primary\">\r\n-            Create Product\r\n-          </Link>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <div className=\"mb-3\">\r\n-          <label className=\"mr-2\">Filter by Category:</label>\r\n-          <select\r\n-            name=\"category\"\r\n-            value={filters.category}\r\n-            onChange={this.handleFilterChange}\r\n-          >\r\n-            <option value=\"\">All</option>\r\n-            <option value=\"Painting\">Painting</option>\r\n-            <option value=\"Sculpture\">Sculpture</option>\r\n-            <option value=\"Drawing\">Drawing</option>\r\n-            <option value=\"Photography\">Photography</option>\r\n-            <option value=\"Pottery\">Pottery</option>\r\n-            <option value=\"Printmaking\">Printmaking</option>\r\n-            <option value=\"Textile_Arts\">Textile Arts</option>\r\n-            <option value=\"Mixed_Media\">Mixed Media</option>\r\n-            {/* Add more category options as needed */}\r\n-          </select>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Max Price:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={1000}\r\n-            x={parseFloat(filters.maxPrice)}\r\n-            onChange={({ x }) => this.handleSliderChange('maxPrice', x)}\r\n-          />\r\n-          <span>{filters.maxPrice}</span>\r\n-\r\n-          <label className=\"ml-3 mr-2\">Min Stock:</label>\r\n-          <InputSlider\r\n-            axis=\"x\"\r\n-            xstep={1}\r\n-            xmin={0}\r\n-            xmax={100}\r\n-            x={parseFloat(filters.minStock)}\r\n-            onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n-          />\r\n-          <span>{filters.minStock}</span>\r\n-        </div>\r\n-\r\n-        <table className=\"table table-bordered\">\r\n-          <thead className=\"thead-dark\">\r\n-            <tr>\r\n-              <th>Product Name</th>\r\n-              <th>Price</th>\r\n-              <th>Category</th>\r\n-              <th>Stock</th>\r\n-              <th>Image</th>\r\n-              <th>DELETE</th>\r\n-              <th>EDIT</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {filteredProducts.map((product) => (\r\n-              <tr key={product.id}>\r\n-                <td>{product.nomProduit}</td>\r\n-                <td>${product.prixProduit}</td>\r\n-                <td>{product.categorie}</td>\r\n-                <td>\r\n-                  <span\r\n-                    style={{\r\n-                      color:\r\n-                        product.stockProduit === 0\r\n-                          ? 'red'\r\n-                          : product.stockProduit < 5\r\n-                          ? 'red'\r\n-                          : product.stockProduit <= 10\r\n-                          ? 'orange'\r\n-                          : 'green',\r\n-                      fontWeight: 'bold',\r\n-                    }}\r\n-                  >\r\n-                    {product.stockProduit === 0 ? 'Out of Stock' : product.stockProduit}\r\n-                  </span>\r\n-                </td>\r\n-                <td>\r\n-                  <img\r\n-                    src={product.imageProduit}\r\n-                    alt={product.nomProduit}\r\n-                    style={{ maxWidth: '100px' }}\r\n-                  />\r\n-                </td>\r\n-                <td>\r\n-                  <button\r\n-                    onClick={() => this.handleDelete(product.id)}\r\n-                    className=\"btn btn-danger btn-sm\"\r\n-                  >\r\n-                    Delete\r\n-                  </button>\r\n-                </td>\r\n-                <td>\r\n-                  <Link\r\n-                    to={`/admin/products/${product.id}`}\r\n-                    className=\"btn btn-primary btn-sm ml-2\"\r\n-                  >\r\n-                    Edit\r\n-                  </Link>\r\n-                </td>\r\n-              </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n-      </div>\r\n-    );\r\n-  }\r\n-}\r\n-\r\n-export default ProductList;\r\n"
                },
                {
                    "date": 1695927602812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,8 +165,10 @@\n             x={parseFloat(filters.minStock)}\r\n             onChange={({ x }) => this.handleSliderChange('minStock', x)}\r\n           />\r\n           <span>{filters.minStock}</span>\r\n+          </Col>\r\n+          </Row>\r\n         </div>\r\n \r\n         <table className=\"table table-bordered\">\r\n           <thead className=\"thead-dark\">\r\n"
                },
                {
                    "date": 1695927610374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import 'react-toastify/dist/ReactToastify.css';\r\n import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n import './ProductList.css'; // Import your custom CSS for styling\r\n import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input , Row} from 'reactstrap';\r\n+import { Input , Row } from 'reactstrap';\r\n class ProductList extends Component {\r\n   state = {\r\n     products: [],\r\n     filteredProducts: [],\r\n"
                },
                {
                    "date": 1695928942537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import 'react-toastify/dist/ReactToastify.css';\r\n import { exportToExcel } from './ExcelExport'; // Import the Excel export function\r\n import './ProductList.css'; // Import your custom CSS for styling\r\n import InputSlider from 'react-input-slider'; // Import the InputSlider component\r\n-import { Input , Row , Col} from 'reactstrap';\r\n+import { Input , Row , Col } from 'reactstrap';\r\n class ProductList extends Component {\r\n   state = {\r\n     products: [],\r\n     filteredProducts: [],\r\n"
                }
            ],
            "date": 1695856176654,
            "name": "Commit-0",
            "content": "import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ProductList extends Component {\r\n  state = {\r\n    products: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get('http://your-api-url/products')\r\n      .then(response => {\r\n        this.setState({ products: response.data });\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching products:', error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Product List</h2>\r\n        <Link to=\"/admin/products/create\">Create Product</Link>\r\n        <ul>\r\n          {this.state.products.map(product => (\r\n            <li key={product.id}>\r\n              {product.nomProduit}: ${product.prixProduit}\r\n              <Link to={`/admin/products/edit/${product.id}`}>Edit</Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductList;\r\n"
        }
    ]
}