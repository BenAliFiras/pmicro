{
    "sourceFile": "app.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 45,
            "patches": [
                {
                    "date": 1697557083986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1697557237169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n var indexRouter = require(\"./routes/index\");\r\n \r\n var app = express();\r\n \r\n+app.use(userRoutes);\r\n \r\n \r\n require(\"./models/user\");\r\n \r\n"
                },
                {
                    "date": 1697557252053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,18 +3,18 @@\n var cookieParser = require(\"cookie-parser\");\r\n var logger = require(\"morgan\");\r\n const mongoose = require(\"mongoose\");\r\n const http = require(\"http\");\r\n+const userRoutes = require(\"./routes/userRoutes\");\r\n require(\"dotenv\").config();\r\n \r\n var indexRouter = require(\"./routes/index\");\r\n \r\n var app = express();\r\n \r\n-app.use(userRoutes);\r\n \r\n-\r\n require(\"./models/user\");\r\n+app.use(userRoutes);\r\n \r\n // Database connection\r\n \r\n mongoose\r\n"
                },
                {
                    "date": 1697557284478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n var cookieParser = require(\"cookie-parser\");\r\n var logger = require(\"morgan\");\r\n const mongoose = require(\"mongoose\");\r\n const http = require(\"http\");\r\n-const userRoutes = require(\"./routes/userRoutes\");\r\n require(\"dotenv\").config();\r\n \r\n var indexRouter = require(\"./routes/index\");\r\n \r\n"
                },
                {
                    "date": 1697557303689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+var createError = require(\"http-errors\");\r\n+var express = require(\"express\");\r\n+var cookieParser = require(\"cookie-parser\");\r\n+var logger = require(\"morgan\");\r\n+const mongoose = require(\"mongoose\");\r\n+const http = require(\"http\");\r\n+const userRoutes = require(\"./routes/UserRoutes\");\r\n+require(\"dotenv\").config();\r\n+\r\n+var indexRouter = require(\"./routes/index\");\r\n+\r\n+var app = express();\r\n+\r\n+\r\n+require(\"./models/user\");\r\n+app.use(userRoutes);\r\n+\r\n+// Database connection\r\n+\r\n+mongoose\r\n+  .connect(process.env.MONGO_URI, {\r\n+    useNewUrlParser: true,\r\n+    useUnifiedTopology: true,\r\n+  })\r\n+  .then(async () => {\r\n+    console.log(\"Connected to DB\");\r\n+    // Create a dummy document in a collection within the \"test2024\" database\r\n+    const db = mongoose.connection;\r\n+    const collection = db.collection(\"Test\");\r\n+\r\n+    const test = { name: \"test\" };\r\n+    await collection.insertOne(test);\r\n+\r\n+    console.log(\"Database  created\");\r\n+  })\r\n+  .catch((err) => {\r\n+    console.error(\"Error connecting to database:\", err);\r\n+  });\r\n+\r\n+\r\n+// Set strictQuery to false to suppress the deprecation warning\r\n+mongoose.set('strictQuery', false);\r\n+\r\n+app.use(logger(\"dev\"));\r\n+app.use(express.json());\r\n+app.use(express.urlencoded({ extended: false }));\r\n+app.use(cookieParser());\r\n+\r\n+app.use(\"/\", indexRouter);\r\n+\r\n+// Catch 404 and forward to error handler\r\n+app.use(function (req, res, next) {\r\n+  next(createError(404));\r\n+});\r\n+\r\n+// Error handler\r\n+app.use(function (err, req, res, next) {\r\n+  // Set locals, only providing error in development\r\n+  res.locals.message = err.message;\r\n+  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n+\r\n+  // Render the error page\r\n+  res.status(err.status || 500);\r\n+  res.json(err);\r\n+});\r\n+\r\n+const server = http.createServer(app);\r\n+server.listen(process.env.PORT || 5000, () => {\r\n+  console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n+});\r\n"
                },
                {
                    "date": 1697557310193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n var cookieParser = require(\"cookie-parser\");\r\n var logger = require(\"morgan\");\r\n const mongoose = require(\"mongoose\");\r\n const http = require(\"http\");\r\n-const userRoutes = require(\"./routes/UserRoutes\");\r\n+const userRoutes = require(\"./routes/userRoutes\");\r\n require(\"dotenv\").config();\r\n \r\n var indexRouter = require(\"./routes/index\");\r\n \r\n@@ -67,73 +67,4 @@\n const server = http.createServer(app);\r\n server.listen(process.env.PORT || 5000, () => {\r\n   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n });\r\n-var createError = require(\"http-errors\");\r\n-var express = require(\"express\");\r\n-var cookieParser = require(\"cookie-parser\");\r\n-var logger = require(\"morgan\");\r\n-const mongoose = require(\"mongoose\");\r\n-const http = require(\"http\");\r\n-require(\"dotenv\").config();\r\n-\r\n-var indexRouter = require(\"./routes/index\");\r\n-\r\n-var app = express();\r\n-\r\n-\r\n-require(\"./models/user\");\r\n-app.use(userRoutes);\r\n-\r\n-// Database connection\r\n-\r\n-mongoose\r\n-  .connect(process.env.MONGO_URI, {\r\n-    useNewUrlParser: true,\r\n-    useUnifiedTopology: true,\r\n-  })\r\n-  .then(async () => {\r\n-    console.log(\"Connected to DB\");\r\n-    // Create a dummy document in a collection within the \"test2024\" database\r\n-    const db = mongoose.connection;\r\n-    const collection = db.collection(\"Test\");\r\n-\r\n-    const test = { name: \"test\" };\r\n-    await collection.insertOne(test);\r\n-\r\n-    console.log(\"Database  created\");\r\n-  })\r\n-  .catch((err) => {\r\n-    console.error(\"Error connecting to database:\", err);\r\n-  });\r\n-\r\n-\r\n-// Set strictQuery to false to suppress the deprecation warning\r\n-mongoose.set('strictQuery', false);\r\n-\r\n-app.use(logger(\"dev\"));\r\n-app.use(express.json());\r\n-app.use(express.urlencoded({ extended: false }));\r\n-app.use(cookieParser());\r\n-\r\n-app.use(\"/\", indexRouter);\r\n-\r\n-// Catch 404 and forward to error handler\r\n-app.use(function (req, res, next) {\r\n-  next(createError(404));\r\n-});\r\n-\r\n-// Error handler\r\n-app.use(function (err, req, res, next) {\r\n-  // Set locals, only providing error in development\r\n-  res.locals.message = err.message;\r\n-  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n-\r\n-  // Render the error page\r\n-  res.status(err.status || 500);\r\n-  res.json(err);\r\n-});\r\n-\r\n-const server = http.createServer(app);\r\n-server.listen(process.env.PORT || 5000, () => {\r\n-  console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n-});\r\n"
                },
                {
                    "date": 1697557386298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n var cookieParser = require(\"cookie-parser\");\r\n var logger = require(\"morgan\");\r\n const mongoose = require(\"mongoose\");\r\n const http = require(\"http\");\r\n-const userRoutes = require(\"./routes/userRoutes\");\r\n+const userRoutes = require(\"./routes/\");\r\n require(\"dotenv\").config();\r\n \r\n var indexRouter = require(\"./routes/index\");\r\n \r\n"
                },
                {
                    "date": 1697557406623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n var cookieParser = require(\"cookie-parser\");\r\n var logger = require(\"morgan\");\r\n const mongoose = require(\"mongoose\");\r\n const http = require(\"http\");\r\n-const userRoutes = require(\"./routes/\");\r\n+const userRoutes = require(\"./\r\n require(\"dotenv\").config();\r\n \r\n var indexRouter = require(\"./routes/index\");\r\n \r\n"
                },
                {
                    "date": 1697557413416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n var cookieParser = require(\"cookie-parser\");\r\n var logger = require(\"morgan\");\r\n const mongoose = require(\"mongoose\");\r\n const http = require(\"http\");\r\n-const userRoutes = require(\"./\r\n+const userRoutes = require(\"./routes/\");\r\n require(\"dotenv\").config();\r\n \r\n var indexRouter = require(\"./routes/index\");\r\n \r\n"
                },
                {
                    "date": 1697557437917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n var cookieParser = require(\"cookie-parser\");\r\n var logger = require(\"morgan\");\r\n const mongoose = require(\"mongoose\");\r\n const http = require(\"http\");\r\n-const userRoutes = require(\"./routes/\");\r\n+const userRoutes = require\r\n require(\"dotenv\").config();\r\n \r\n var indexRouter = require(\"./routes/index\");\r\n \r\n"
                },
                {
                    "date": 1697557445364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n var cookieParser = require(\"cookie-parser\");\r\n var logger = require(\"morgan\");\r\n const mongoose = require(\"mongoose\");\r\n const http = require(\"http\");\r\n-const userRoutes = require\r\n+const userRoutes = require(\"userRoutes\");\r\n require(\"dotenv\").config();\r\n \r\n var indexRouter = require(\"./routes/index\");\r\n \r\n"
                },
                {
                    "date": 1697557450715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n var cookieParser = require(\"cookie-parser\");\r\n var logger = require(\"morgan\");\r\n const mongoose = require(\"mongoose\");\r\n const http = require(\"http\");\r\n-const userRoutes = require(\"userRoutes\");\r\n+const userRoutes = require(\"routes/userRoutes\");\r\n require(\"dotenv\").config();\r\n \r\n var indexRouter = require(\"./routes/index\");\r\n \r\n"
                },
                {
                    "date": 1697557512086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n var cookieParser = require(\"cookie-parser\");\r\n var logger = require(\"morgan\");\r\n const mongoose = require(\"mongoose\");\r\n const http = require(\"http\");\r\n-const userRoutes = require(\"routes/userRoutes\");\r\n+const userRoutes = require(\"../routes/userRoutes\");\r\n require(\"dotenv\").config();\r\n \r\n var indexRouter = require(\"./routes/index\");\r\n \r\n"
                },
                {
                    "date": 1697557519012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+var createError = require(\"http-errors\");\r\n+var express = require(\"express\");\r\n+var cookieParser = require(\"cookie-parser\");\r\n+var logger = require(\"morgan\");\r\n+const mongoose = require(\"mongoose\");\r\n+const http = require(\"http\");\r\n+const userRoutes = require(\"./routes/userRoutes\");\r\n+require(\"dotenv\").config();\r\n+\r\n+var indexRouter = require(\"./routes/index\");\r\n+\r\n+var app = express();\r\n+\r\n+\r\n+require(\"./models/user\");\r\n+app.use(userRoutes);\r\n+\r\n+// Database connection\r\n+\r\n+mongoose\r\n+  .connect(process.env.MONGO_URI, {\r\n+    useNewUrlParser: true,\r\n+    useUnifiedTopology: true,\r\n+  })\r\n+  .then(async () => {\r\n+    console.log(\"Connected to DB\");\r\n+    // Create a dummy document in a collection within the \"test2024\" database\r\n+    const db = mongoose.connection;\r\n+    const collection = db.collection(\"Test\");\r\n+\r\n+    const test = { name: \"test\" };\r\n+    await collection.insertOne(test);\r\n+\r\n+    console.log(\"Database  created\");\r\n+  })\r\n+  .catch((err) => {\r\n+    console.error(\"Error connecting to database:\", err);\r\n+  });\r\n+\r\n+\r\n+// Set strictQuery to false to suppress the deprecation warning\r\n+mongoose.set('strictQuery', false);\r\n+\r\n+app.use(logger(\"dev\"));\r\n+app.use(express.json());\r\n+app.use(express.urlencoded({ extended: false }));\r\n+app.use(cookieParser());\r\n+\r\n+app.use(\"/\", indexRouter);\r\n+\r\n+// Catch 404 and forward to error handler\r\n+app.use(function (req, res, next) {\r\n+  next(createError(404));\r\n+});\r\n+\r\n+// Error handler\r\n+app.use(function (err, req, res, next) {\r\n+  // Set locals, only providing error in development\r\n+  res.locals.message = err.message;\r\n+  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n+\r\n+  // Render the error page\r\n+  res.status(err.status || 500);\r\n+  res.json(err);\r\n+});\r\n+\r\n+const server = http.createServer(app);\r\n+server.listen(process.env.PORT || 5000, () => {\r\n+  console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n+});\r\n"
                },
                {
                    "date": 1697558661655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,74 +67,4 @@\n const server = http.createServer(app);\r\n server.listen(process.env.PORT || 5000, () => {\r\n   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n });\r\n-var createError = require(\"http-errors\");\r\n-var express = require(\"express\");\r\n-var cookieParser = require(\"cookie-parser\");\r\n-var logger = require(\"morgan\");\r\n-const mongoose = require(\"mongoose\");\r\n-const http = require(\"http\");\r\n-const userRoutes = require(\"../routes/userRoutes\");\r\n-require(\"dotenv\").config();\r\n-\r\n-var indexRouter = require(\"./routes/index\");\r\n-\r\n-var app = express();\r\n-\r\n-\r\n-require(\"./models/user\");\r\n-app.use(userRoutes);\r\n-\r\n-// Database connection\r\n-\r\n-mongoose\r\n-  .connect(process.env.MONGO_URI, {\r\n-    useNewUrlParser: true,\r\n-    useUnifiedTopology: true,\r\n-  })\r\n-  .then(async () => {\r\n-    console.log(\"Connected to DB\");\r\n-    // Create a dummy document in a collection within the \"test2024\" database\r\n-    const db = mongoose.connection;\r\n-    const collection = db.collection(\"Test\");\r\n-\r\n-    const test = { name: \"test\" };\r\n-    await collection.insertOne(test);\r\n-\r\n-    console.log(\"Database  created\");\r\n-  })\r\n-  .catch((err) => {\r\n-    console.error(\"Error connecting to database:\", err);\r\n-  });\r\n-\r\n-\r\n-// Set strictQuery to false to suppress the deprecation warning\r\n-mongoose.set('strictQuery', false);\r\n-\r\n-app.use(logger(\"dev\"));\r\n-app.use(express.json());\r\n-app.use(express.urlencoded({ extended: false }));\r\n-app.use(cookieParser());\r\n-\r\n-app.use(\"/\", indexRouter);\r\n-\r\n-// Catch 404 and forward to error handler\r\n-app.use(function (req, res, next) {\r\n-  next(createError(404));\r\n-});\r\n-\r\n-// Error handler\r\n-app.use(function (err, req, res, next) {\r\n-  // Set locals, only providing error in development\r\n-  res.locals.message = err.message;\r\n-  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n-\r\n-  // Render the error page\r\n-  res.status(err.status || 500);\r\n-  res.json(err);\r\n-});\r\n-\r\n-const server = http.createServer(app);\r\n-server.listen(process.env.PORT || 5000, () => {\r\n-  console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n-});\r\n"
                },
                {
                    "date": 1697558675779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,17 @@\n-var createError = require(\"http-errors\");\r\n-var express = require(\"express\");\r\n-var cookieParser = require(\"cookie-parser\");\r\n-var logger = require(\"morgan\");\r\n+const createError = require(\"http-errors\");\r\n+const express = require(\"express\");\r\n+const cookieParser = require(\"cookie-parser\");\r\n+const logger = require(\"morgan\");\r\n const mongoose = require(\"mongoose\");\r\n const http = require(\"http\");\r\n-const userRoutes = require(\"./routes/userRoutes\");\r\n+const userRoutes = require(\"./routes/userRoutes\"); // Adjust the path accordingly\r\n require(\"dotenv\").config();\r\n \r\n-var indexRouter = require(\"./routes/index\");\r\n+const indexRouter = require(\"./routes/index\");\r\n \r\n-var app = express();\r\n+const app = express();\r\n \r\n-\r\n require(\"./models/user\");\r\n app.use(userRoutes);\r\n \r\n // Database connection\r\n@@ -36,9 +35,8 @@\n   .catch((err) => {\r\n     console.error(\"Error connecting to database:\", err);\r\n   });\r\n \r\n-\r\n // Set strictQuery to false to suppress the deprecation warning\r\n mongoose.set('strictQuery', false);\r\n \r\n app.use(logger(\"dev\"));\r\n"
                },
                {
                    "date": 1697558693760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n const cookieParser = require(\"cookie-parser\");\r\n const logger = require(\"morgan\");\r\n const mongoose = require(\"mongoose\");\r\n const http = require(\"http\");\r\n-const userRoutes = require(\"./routes/userRoutes\"); // Adjust the path accordingly\r\n+const userRoutes = require(\"/routes/userRoutes\"); // Adjust the path accordingly\r\n require(\"dotenv\").config();\r\n \r\n const indexRouter = require(\"./routes/index\");\r\n \r\n"
                },
                {
                    "date": 1697558707921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n const cookieParser = require(\"cookie-parser\");\r\n const logger = require(\"morgan\");\r\n const mongoose = require(\"mongoose\");\r\n const http = require(\"http\");\r\n-const userRoutes = require(\"/routes/userRoutes\"); // Adjust the path accordingly\r\n+const userRoutes = require(\"./routes/userRoutes\"); // Adjust the path accordingly\r\n require(\"dotenv\").config();\r\n \r\n const indexRouter = require(\"./routes/index\");\r\n \r\n"
                },
                {
                    "date": 1697558713770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n const cookieParser = require(\"cookie-parser\");\r\n const logger = require(\"morgan\");\r\n const mongoose = require(\"mongoose\");\r\n const http = require(\"http\");\r\n-const userRoutes = require(\"./routes/userRoutes\"); // Adjust the path accordingly\r\n+const userRoutes = require(\".userRoutes\"); // Adjust the path accordingly\r\n require(\"dotenv\").config();\r\n \r\n const indexRouter = require(\"./routes/index\");\r\n \r\n"
                },
                {
                    "date": 1697558725998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n const cookieParser = require(\"cookie-parser\");\r\n const logger = require(\"morgan\");\r\n const mongoose = require(\"mongoose\");\r\n const http = require(\"http\");\r\n-const userRoutes = require(\".userRoutes\"); // Adjust the path accordingly\r\n+const userRoutes = require(\".\"); // Adjust the path accordingly\r\n require(\"dotenv\").config();\r\n \r\n const indexRouter = require(\"./routes/index\");\r\n \r\n"
                },
                {
                    "date": 1697558733508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n const cookieParser = require(\"cookie-parser\");\r\n const logger = require(\"morgan\");\r\n const mongoose = require(\"mongoose\");\r\n const http = require(\"http\");\r\n-const userRoutes = require(\".\"); // Adjust the path accordingly\r\n+const userRoutes = require(\"./routes/\"); // Adjust the path accordingly\r\n require(\"dotenv\").config();\r\n \r\n const indexRouter = require(\"./routes/index\");\r\n \r\n"
                },
                {
                    "date": 1697558741457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n const cookieParser = require(\"cookie-parser\");\r\n const logger = require(\"morgan\");\r\n const mongoose = require(\"mongoose\");\r\n const http = require(\"http\");\r\n-const userRoutes = require(\"./routes/\"); // Adjust the path accordingly\r\n+const userRoutes = require(\"./routes/userRoutes.js'); // Adjust the path accordingly\r\n require(\"dotenv\").config();\r\n \r\n const indexRouter = require(\"./routes/index\");\r\n \r\n"
                },
                {
                    "date": 1697558749230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n const cookieParser = require(\"cookie-parser\");\r\n const logger = require(\"morgan\");\r\n const mongoose = require(\"mongoose\");\r\n const http = require(\"http\");\r\n-const userRoutes = require(\"./routes/userRoutes.js'); // Adjust the path accordingly\r\n+const userRoutes = require('./routes/userRoutes'); // Adjust the path accordingly\r\n require(\"dotenv\").config();\r\n \r\n const indexRouter = require(\"./routes/index\");\r\n \r\n"
                },
                {
                    "date": 1697558769294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n const cookieParser = require(\"cookie-parser\");\r\n const logger = require(\"morgan\");\r\n const mongoose = require(\"mongoose\");\r\n const http = require(\"http\");\r\n-const userRoutes = require('./routes/userRoutes'); // Adjust the path accordingly\r\n+const userRoutes = require(\"./routes/userRoutes.js\"); // Adjust the path accordingly\r\n require(\"dotenv\").config();\r\n \r\n const indexRouter = require(\"./routes/index\");\r\n \r\n"
                },
                {
                    "date": 1697558782115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n const cookieParser = require(\"cookie-parser\");\r\n const logger = require(\"morgan\");\r\n const mongoose = require(\"mongoose\");\r\n const http = require(\"http\");\r\n-const userRoutes = require(\"./routes/userRoutes.js\"); // Adjust the path accordingly\r\n require(\"dotenv\").config();\r\n \r\n const indexRouter = require(\"./routes/index\");\r\n \r\n"
                },
                {
                    "date": 1697558881481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,67 +1,67 @@\n-const createError = require(\"http-errors\");\r\n-const express = require(\"express\");\r\n-const cookieParser = require(\"cookie-parser\");\r\n-const logger = require(\"morgan\");\r\n-const mongoose = require(\"mongoose\");\r\n-const http = require(\"http\");\r\n-require(\"dotenv\").config();\r\n+// const createError = require(\"http-errors\");\r\n+// const express = require(\"express\");\r\n+// const cookieParser = require(\"cookie-parser\");\r\n+// const logger = require(\"morgan\");\r\n+// const mongoose = require(\"mongoose\");\r\n+// const http = require(\"http\");\r\n+// require(\"dotenv\").config();\r\n \r\n-const indexRouter = require(\"./routes/index\");\r\n+// const indexRouter = require(\"./routes/index\");\r\n \r\n-const app = express();\r\n+// const app = express();\r\n \r\n-require(\"./models/user\");\r\n-app.use(userRoutes);\r\n+// require(\"./models/user\");\r\n+// app.use(userRoutes);\r\n \r\n-// Database connection\r\n+// // Database connection\r\n \r\n-mongoose\r\n-  .connect(process.env.MONGO_URI, {\r\n-    useNewUrlParser: true,\r\n-    useUnifiedTopology: true,\r\n-  })\r\n-  .then(async () => {\r\n-    console.log(\"Connected to DB\");\r\n-    // Create a dummy document in a collection within the \"test2024\" database\r\n-    const db = mongoose.connection;\r\n-    const collection = db.collection(\"Test\");\r\n+// mongoose\r\n+//   .connect(process.env.MONGO_URI, {\r\n+//     useNewUrlParser: true,\r\n+//     useUnifiedTopology: true,\r\n+//   })\r\n+//   .then(async () => {\r\n+//     console.log(\"Connected to DB\");\r\n+//     // Create a dummy document in a collection within the \"test2024\" database\r\n+//     const db = mongoose.connection;\r\n+//     const collection = db.collection(\"Test\");\r\n \r\n-    const test = { name: \"test\" };\r\n-    await collection.insertOne(test);\r\n+//     const test = { name: \"test\" };\r\n+//     await collection.insertOne(test);\r\n \r\n-    console.log(\"Database  created\");\r\n-  })\r\n-  .catch((err) => {\r\n-    console.error(\"Error connecting to database:\", err);\r\n-  });\r\n+//     console.log(\"Database  created\");\r\n+//   })\r\n+//   .catch((err) => {\r\n+//     console.error(\"Error connecting to database:\", err);\r\n+//   });\r\n \r\n-// Set strictQuery to false to suppress the deprecation warning\r\n-mongoose.set('strictQuery', false);\r\n+// // Set strictQuery to false to suppress the deprecation warning\r\n+// mongoose.set('strictQuery', false);\r\n \r\n-app.use(logger(\"dev\"));\r\n-app.use(express.json());\r\n-app.use(express.urlencoded({ extended: false }));\r\n-app.use(cookieParser());\r\n+// app.use(logger(\"dev\"));\r\n+// app.use(express.json());\r\n+// app.use(express.urlencoded({ extended: false }));\r\n+// app.use(cookieParser());\r\n \r\n-app.use(\"/\", indexRouter);\r\n+// app.use(\"/\", indexRouter);\r\n \r\n-// Catch 404 and forward to error handler\r\n-app.use(function (req, res, next) {\r\n-  next(createError(404));\r\n-});\r\n+// // Catch 404 and forward to error handler\r\n+// app.use(function (req, res, next) {\r\n+//   next(createError(404));\r\n+// });\r\n \r\n-// Error handler\r\n-app.use(function (err, req, res, next) {\r\n-  // Set locals, only providing error in development\r\n-  res.locals.message = err.message;\r\n-  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n+// // Error handler\r\n+// app.use(function (err, req, res, next) {\r\n+//   // Set locals, only providing error in development\r\n+//   res.locals.message = err.message;\r\n+//   res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n \r\n-  // Render the error page\r\n-  res.status(err.status || 500);\r\n-  res.json(err);\r\n-});\r\n+//   // Render the error page\r\n+//   res.status(err.status || 500);\r\n+//   res.json(err);\r\n+// });\r\n \r\n-const server = http.createServer(app);\r\n-server.listen(process.env.PORT || 5000, () => {\r\n-  console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n-});\r\n+// const server = http.createServer(app);\r\n+// server.listen(process.env.PORT || 5000, () => {\r\n+//   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n+// });\r\n"
                },
                {
                    "date": 1697558890841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,100 @@\n+const express = require('express');\r\n+const mongoose = require('mongoose');\r\n+const bodyParser = require('body-parser');\r\n+const dotenv = require('dotenv');\r\n+const userRoutes = require('./'); // Update the path accordingly\r\n+\r\n+// Load environment variables from .env file\r\n+dotenv.config();\r\n+\r\n+// Set up Express\r\n+const app = express();\r\n+const port = process.env.PORT || 3000;\r\n+\r\n+// Connect to MongoDB\r\n+const dbURI = process.env.MONGODB_URI;\r\n+mongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true })\r\n+  .then(() => console.log('Connected to the database'))\r\n+  .catch((err) => console.error('Error connecting to the database', err));\r\n+\r\n+// Middleware\r\n+app.use(bodyParser.json());\r\n+\r\n+// Routes\r\n+app.use('/api/users', userRoutes); // Assuming your user routes are under /api/users\r\n+\r\n+// Start the server\r\n+app.listen(port, () => {\r\n+  console.log(`Server is running on port ${port}`);\r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+// const createError = require(\"http-errors\");\r\n+// const express = require(\"express\");\r\n+// const cookieParser = require(\"cookie-parser\");\r\n+// const logger = require(\"morgan\");\r\n+// const mongoose = require(\"mongoose\");\r\n+// const http = require(\"http\");\r\n+// require(\"dotenv\").config();\r\n+\r\n+// const indexRouter = require(\"./routes/index\");\r\n+\r\n+// const app = express();\r\n+\r\n+// require(\"./models/user\");\r\n+// app.use(userRoutes);\r\n+\r\n+// // Database connection\r\n+\r\n+// mongoose\r\n+//   .connect(process.env.MONGO_URI, {\r\n+//     useNewUrlParser: true,\r\n+//     useUnifiedTopology: true,\r\n+//   })\r\n+//   .then(async () => {\r\n+//     console.log(\"Connected to DB\");\r\n+//     // Create a dummy document in a collection within the \"test2024\" database\r\n+//     const db = mongoose.connection;\r\n+//     const collection = db.collection(\"Test\");\r\n+\r\n+//     const test = { name: \"test\" };\r\n+//     await collection.insertOne(test);\r\n+\r\n+//     console.log(\"Database  created\");\r\n+//   })\r\n+//   .catch((err) => {\r\n+//     console.error(\"Error connecting to database:\", err);\r\n+//   });\r\n+\r\n+// // Set strictQuery to false to suppress the deprecation warning\r\n+// mongoose.set('strictQuery', false);\r\n+\r\n+// app.use(logger(\"dev\"));\r\n+// app.use(express.json());\r\n+// app.use(express.urlencoded({ extended: false }));\r\n+// app.use(cookieParser());\r\n+\r\n+// app.use(\"/\", indexRouter);\r\n+\r\n+// // Catch 404 and forward to error handler\r\n+// app.use(function (req, res, next) {\r\n+//   next(createError(404));\r\n+// });\r\n+\r\n+// // Error handler\r\n+// app.use(function (err, req, res, next) {\r\n+//   // Set locals, only providing error in development\r\n+//   res.locals.message = err.message;\r\n+//   res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n+\r\n+//   // Render the error page\r\n+//   res.status(err.status || 500);\r\n+//   res.json(err);\r\n+// });\r\n+\r\n+// const server = http.createServer(app);\r\n+// server.listen(process.env.PORT || 5000, () => {\r\n+//   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n+// });\r\n"
                },
                {
                    "date": 1697558896329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,100 @@\n+const express = require('express');\r\n+const mongoose = require('mongoose');\r\n+const bodyParser = require('body-parser');\r\n+const dotenv = require('dotenv');\r\n+const userRoutes = require('./routes/userRoutes'); // Update the path accordingly\r\n+\r\n+// Load environment variables from .env file\r\n+dotenv.config();\r\n+\r\n+// Set up Express\r\n+const app = express();\r\n+const port = process.env.PORT || 3000;\r\n+\r\n+// Connect to MongoDB\r\n+const dbURI = process.env.MONGODB_URI;\r\n+mongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true })\r\n+  .then(() => console.log('Connected to the database'))\r\n+  .catch((err) => console.error('Error connecting to the database', err));\r\n+\r\n+// Middleware\r\n+app.use(bodyParser.json());\r\n+\r\n+// Routes\r\n+app.use('/api/users', userRoutes); // Assuming your user routes are under /api/users\r\n+\r\n+// Start the server\r\n+app.listen(port, () => {\r\n+  console.log(`Server is running on port ${port}`);\r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+// const createError = require(\"http-errors\");\r\n+// const express = require(\"express\");\r\n+// const cookieParser = require(\"cookie-parser\");\r\n+// const logger = require(\"morgan\");\r\n+// const mongoose = require(\"mongoose\");\r\n+// const http = require(\"http\");\r\n+// require(\"dotenv\").config();\r\n+\r\n+// const indexRouter = require(\"./routes/index\");\r\n+\r\n+// const app = express();\r\n+\r\n+// require(\"./models/user\");\r\n+// app.use(userRoutes);\r\n+\r\n+// // Database connection\r\n+\r\n+// mongoose\r\n+//   .connect(process.env.MONGO_URI, {\r\n+//     useNewUrlParser: true,\r\n+//     useUnifiedTopology: true,\r\n+//   })\r\n+//   .then(async () => {\r\n+//     console.log(\"Connected to DB\");\r\n+//     // Create a dummy document in a collection within the \"test2024\" database\r\n+//     const db = mongoose.connection;\r\n+//     const collection = db.collection(\"Test\");\r\n+\r\n+//     const test = { name: \"test\" };\r\n+//     await collection.insertOne(test);\r\n+\r\n+//     console.log(\"Database  created\");\r\n+//   })\r\n+//   .catch((err) => {\r\n+//     console.error(\"Error connecting to database:\", err);\r\n+//   });\r\n+\r\n+// // Set strictQuery to false to suppress the deprecation warning\r\n+// mongoose.set('strictQuery', false);\r\n+\r\n+// app.use(logger(\"dev\"));\r\n+// app.use(express.json());\r\n+// app.use(express.urlencoded({ extended: false }));\r\n+// app.use(cookieParser());\r\n+\r\n+// app.use(\"/\", indexRouter);\r\n+\r\n+// // Catch 404 and forward to error handler\r\n+// app.use(function (req, res, next) {\r\n+//   next(createError(404));\r\n+// });\r\n+\r\n+// // Error handler\r\n+// app.use(function (err, req, res, next) {\r\n+//   // Set locals, only providing error in development\r\n+//   res.locals.message = err.message;\r\n+//   res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n+\r\n+//   // Render the error page\r\n+//   res.status(err.status || 500);\r\n+//   res.json(err);\r\n+// });\r\n+\r\n+// const server = http.createServer(app);\r\n+// server.listen(process.env.PORT || 5000, () => {\r\n+//   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n+// });\r\n"
                },
                {
                    "date": 1697558985266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,100 @@\n+const express = require('express');\r\n+const mongoose = require('mongoose');\r\n+const bodyParser = require('body-parser');\r\n+const dotenv = require('dotenv');\r\n+const userRoutes = require('./routes/'); // Update the path accordingly\r\n+\r\n+// Load environment variables from .env file\r\n+dotenv.config();\r\n+\r\n+// Set up Express\r\n+const app = express();\r\n+const port = process.env.PORT || 3000;\r\n+\r\n+// Connect to MongoDB\r\n+const dbURI = process.env.MONGODB_URI;\r\n+mongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true })\r\n+  .then(() => console.log('Connected to the database'))\r\n+  .catch((err) => console.error('Error connecting to the database', err));\r\n+\r\n+// Middleware\r\n+app.use(bodyParser.json());\r\n+\r\n+// Routes\r\n+app.use('/api/users', userRoutes); // Assuming your user routes are under /api/users\r\n+\r\n+// Start the server\r\n+app.listen(port, () => {\r\n+  console.log(`Server is running on port ${port}`);\r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+// const createError = require(\"http-errors\");\r\n+// const express = require(\"express\");\r\n+// const cookieParser = require(\"cookie-parser\");\r\n+// const logger = require(\"morgan\");\r\n+// const mongoose = require(\"mongoose\");\r\n+// const http = require(\"http\");\r\n+// require(\"dotenv\").config();\r\n+\r\n+// const indexRouter = require(\"./routes/index\");\r\n+\r\n+// const app = express();\r\n+\r\n+// require(\"./models/user\");\r\n+// app.use(userRoutes);\r\n+\r\n+// // Database connection\r\n+\r\n+// mongoose\r\n+//   .connect(process.env.MONGO_URI, {\r\n+//     useNewUrlParser: true,\r\n+//     useUnifiedTopology: true,\r\n+//   })\r\n+//   .then(async () => {\r\n+//     console.log(\"Connected to DB\");\r\n+//     // Create a dummy document in a collection within the \"test2024\" database\r\n+//     const db = mongoose.connection;\r\n+//     const collection = db.collection(\"Test\");\r\n+\r\n+//     const test = { name: \"test\" };\r\n+//     await collection.insertOne(test);\r\n+\r\n+//     console.log(\"Database  created\");\r\n+//   })\r\n+//   .catch((err) => {\r\n+//     console.error(\"Error connecting to database:\", err);\r\n+//   });\r\n+\r\n+// // Set strictQuery to false to suppress the deprecation warning\r\n+// mongoose.set('strictQuery', false);\r\n+\r\n+// app.use(logger(\"dev\"));\r\n+// app.use(express.json());\r\n+// app.use(express.urlencoded({ extended: false }));\r\n+// app.use(cookieParser());\r\n+\r\n+// app.use(\"/\", indexRouter);\r\n+\r\n+// // Catch 404 and forward to error handler\r\n+// app.use(function (req, res, next) {\r\n+//   next(createError(404));\r\n+// });\r\n+\r\n+// // Error handler\r\n+// app.use(function (err, req, res, next) {\r\n+//   // Set locals, only providing error in development\r\n+//   res.locals.message = err.message;\r\n+//   res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n+\r\n+//   // Render the error page\r\n+//   res.status(err.status || 500);\r\n+//   res.json(err);\r\n+// });\r\n+\r\n+// const server = http.createServer(app);\r\n+// server.listen(process.env.PORT || 5000, () => {\r\n+//   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n+// });\r\n"
                },
                {
                    "date": 1697558998159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,100 @@\n+const express = require('express');\r\n+const mongoose = require('mongoose');\r\n+const bodyParser = require('body-parser');\r\n+const dotenv = require('dotenv');\r\n+const userRoutes = require('./routes/index'); // Update the path accordingly\r\n+\r\n+// Load environment variables from .env file\r\n+dotenv.config();\r\n+\r\n+// Set up Express\r\n+const app = express();\r\n+const port = process.env.PORT || 3000;\r\n+\r\n+// Connect to MongoDB\r\n+const dbURI = process.env.MONGODB_URI;\r\n+mongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true })\r\n+  .then(() => console.log('Connected to the database'))\r\n+  .catch((err) => console.error('Error connecting to the database', err));\r\n+\r\n+// Middleware\r\n+app.use(bodyParser.json());\r\n+\r\n+// Routes\r\n+app.use('/api/users', userRoutes); // Assuming your user routes are under /api/users\r\n+\r\n+// Start the server\r\n+app.listen(port, () => {\r\n+  console.log(`Server is running on port ${port}`);\r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+// const createError = require(\"http-errors\");\r\n+// const express = require(\"express\");\r\n+// const cookieParser = require(\"cookie-parser\");\r\n+// const logger = require(\"morgan\");\r\n+// const mongoose = require(\"mongoose\");\r\n+// const http = require(\"http\");\r\n+// require(\"dotenv\").config();\r\n+\r\n+// const indexRouter = require(\"./routes/index\");\r\n+\r\n+// const app = express();\r\n+\r\n+// require(\"./models/user\");\r\n+// app.use(userRoutes);\r\n+\r\n+// // Database connection\r\n+\r\n+// mongoose\r\n+//   .connect(process.env.MONGO_URI, {\r\n+//     useNewUrlParser: true,\r\n+//     useUnifiedTopology: true,\r\n+//   })\r\n+//   .then(async () => {\r\n+//     console.log(\"Connected to DB\");\r\n+//     // Create a dummy document in a collection within the \"test2024\" database\r\n+//     const db = mongoose.connection;\r\n+//     const collection = db.collection(\"Test\");\r\n+\r\n+//     const test = { name: \"test\" };\r\n+//     await collection.insertOne(test);\r\n+\r\n+//     console.log(\"Database  created\");\r\n+//   })\r\n+//   .catch((err) => {\r\n+//     console.error(\"Error connecting to database:\", err);\r\n+//   });\r\n+\r\n+// // Set strictQuery to false to suppress the deprecation warning\r\n+// mongoose.set('strictQuery', false);\r\n+\r\n+// app.use(logger(\"dev\"));\r\n+// app.use(express.json());\r\n+// app.use(express.urlencoded({ extended: false }));\r\n+// app.use(cookieParser());\r\n+\r\n+// app.use(\"/\", indexRouter);\r\n+\r\n+// // Catch 404 and forward to error handler\r\n+// app.use(function (req, res, next) {\r\n+//   next(createError(404));\r\n+// });\r\n+\r\n+// // Error handler\r\n+// app.use(function (err, req, res, next) {\r\n+//   // Set locals, only providing error in development\r\n+//   res.locals.message = err.message;\r\n+//   res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n+\r\n+//   // Render the error page\r\n+//   res.status(err.status || 500);\r\n+//   res.json(err);\r\n+// });\r\n+\r\n+// const server = http.createServer(app);\r\n+// server.listen(process.env.PORT || 5000, () => {\r\n+//   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n+// });\r\n"
                },
                {
                    "date": 1697559035656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,100 @@\n+const express = require('express');\r\n+const mongoose = require('mongoose');\r\n+const bodyParser = require('body-parser');\r\n+const dotenv = require('dotenv');\r\n+const userRoutes = require('./routes/'); // Update the path accordingly\r\n+\r\n+// Load environment variables from .env file\r\n+dotenv.config();\r\n+\r\n+// Set up Express\r\n+const app = express();\r\n+const port = process.env.PORT || 3000;\r\n+\r\n+// Connect to MongoDB\r\n+const dbURI = process.env.MONGODB_URI;\r\n+mongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true })\r\n+  .then(() => console.log('Connected to the database'))\r\n+  .catch((err) => console.error('Error connecting to the database', err));\r\n+\r\n+// Middleware\r\n+app.use(bodyParser.json());\r\n+\r\n+// Routes\r\n+app.use('/api/users', userRoutes); // Assuming your user routes are under /api/users\r\n+\r\n+// Start the server\r\n+app.listen(port, () => {\r\n+  console.log(`Server is running on port ${port}`);\r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+// const createError = require(\"http-errors\");\r\n+// const express = require(\"express\");\r\n+// const cookieParser = require(\"cookie-parser\");\r\n+// const logger = require(\"morgan\");\r\n+// const mongoose = require(\"mongoose\");\r\n+// const http = require(\"http\");\r\n+// require(\"dotenv\").config();\r\n+\r\n+// const indexRouter = require(\"./routes/index\");\r\n+\r\n+// const app = express();\r\n+\r\n+// require(\"./models/user\");\r\n+// app.use(userRoutes);\r\n+\r\n+// // Database connection\r\n+\r\n+// mongoose\r\n+//   .connect(process.env.MONGO_URI, {\r\n+//     useNewUrlParser: true,\r\n+//     useUnifiedTopology: true,\r\n+//   })\r\n+//   .then(async () => {\r\n+//     console.log(\"Connected to DB\");\r\n+//     // Create a dummy document in a collection within the \"test2024\" database\r\n+//     const db = mongoose.connection;\r\n+//     const collection = db.collection(\"Test\");\r\n+\r\n+//     const test = { name: \"test\" };\r\n+//     await collection.insertOne(test);\r\n+\r\n+//     console.log(\"Database  created\");\r\n+//   })\r\n+//   .catch((err) => {\r\n+//     console.error(\"Error connecting to database:\", err);\r\n+//   });\r\n+\r\n+// // Set strictQuery to false to suppress the deprecation warning\r\n+// mongoose.set('strictQuery', false);\r\n+\r\n+// app.use(logger(\"dev\"));\r\n+// app.use(express.json());\r\n+// app.use(express.urlencoded({ extended: false }));\r\n+// app.use(cookieParser());\r\n+\r\n+// app.use(\"/\", indexRouter);\r\n+\r\n+// // Catch 404 and forward to error handler\r\n+// app.use(function (req, res, next) {\r\n+//   next(createError(404));\r\n+// });\r\n+\r\n+// // Error handler\r\n+// app.use(function (err, req, res, next) {\r\n+//   // Set locals, only providing error in development\r\n+//   res.locals.message = err.message;\r\n+//   res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n+\r\n+//   // Render the error page\r\n+//   res.status(err.status || 500);\r\n+//   res.json(err);\r\n+// });\r\n+\r\n+// const server = http.createServer(app);\r\n+// server.listen(process.env.PORT || 5000, () => {\r\n+//   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n+// });\r\n"
                },
                {
                    "date": 1697559064793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,471 +97,4 @@\n // const server = http.createServer(app);\r\n // server.listen(process.env.PORT || 5000, () => {\r\n //   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n // });\r\n-const express = require('express');\r\n-const mongoose = require('mongoose');\r\n-const bodyParser = require('body-parser');\r\n-const dotenv = require('dotenv');\r\n-const userRoutes = require('./routes/index'); // Update the path accordingly\r\n-\r\n-// Load environment variables from .env file\r\n-dotenv.config();\r\n-\r\n-// Set up Express\r\n-const app = express();\r\n-const port = process.env.PORT || 3000;\r\n-\r\n-// Connect to MongoDB\r\n-const dbURI = process.env.MONGODB_URI;\r\n-mongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true })\r\n-  .then(() => console.log('Connected to the database'))\r\n-  .catch((err) => console.error('Error connecting to the database', err));\r\n-\r\n-// Middleware\r\n-app.use(bodyParser.json());\r\n-\r\n-// Routes\r\n-app.use('/api/users', userRoutes); // Assuming your user routes are under /api/users\r\n-\r\n-// Start the server\r\n-app.listen(port, () => {\r\n-  console.log(`Server is running on port ${port}`);\r\n-});\r\n-\r\n-\r\n-\r\n-\r\n-// const createError = require(\"http-errors\");\r\n-// const express = require(\"express\");\r\n-// const cookieParser = require(\"cookie-parser\");\r\n-// const logger = require(\"morgan\");\r\n-// const mongoose = require(\"mongoose\");\r\n-// const http = require(\"http\");\r\n-// require(\"dotenv\").config();\r\n-\r\n-// const indexRouter = require(\"./routes/index\");\r\n-\r\n-// const app = express();\r\n-\r\n-// require(\"./models/user\");\r\n-// app.use(userRoutes);\r\n-\r\n-// // Database connection\r\n-\r\n-// mongoose\r\n-//   .connect(process.env.MONGO_URI, {\r\n-//     useNewUrlParser: true,\r\n-//     useUnifiedTopology: true,\r\n-//   })\r\n-//   .then(async () => {\r\n-//     console.log(\"Connected to DB\");\r\n-//     // Create a dummy document in a collection within the \"test2024\" database\r\n-//     const db = mongoose.connection;\r\n-//     const collection = db.collection(\"Test\");\r\n-\r\n-//     const test = { name: \"test\" };\r\n-//     await collection.insertOne(test);\r\n-\r\n-//     console.log(\"Database  created\");\r\n-//   })\r\n-//   .catch((err) => {\r\n-//     console.error(\"Error connecting to database:\", err);\r\n-//   });\r\n-\r\n-// // Set strictQuery to false to suppress the deprecation warning\r\n-// mongoose.set('strictQuery', false);\r\n-\r\n-// app.use(logger(\"dev\"));\r\n-// app.use(express.json());\r\n-// app.use(express.urlencoded({ extended: false }));\r\n-// app.use(cookieParser());\r\n-\r\n-// app.use(\"/\", indexRouter);\r\n-\r\n-// // Catch 404 and forward to error handler\r\n-// app.use(function (req, res, next) {\r\n-//   next(createError(404));\r\n-// });\r\n-\r\n-// // Error handler\r\n-// app.use(function (err, req, res, next) {\r\n-//   // Set locals, only providing error in development\r\n-//   res.locals.message = err.message;\r\n-//   res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n-\r\n-//   // Render the error page\r\n-//   res.status(err.status || 500);\r\n-//   res.json(err);\r\n-// });\r\n-\r\n-// const server = http.createServer(app);\r\n-// server.listen(process.env.PORT || 5000, () => {\r\n-//   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n-// });\r\n-const express = require('express');\r\n-const mongoose = require('mongoose');\r\n-const bodyParser = require('body-parser');\r\n-const dotenv = require('dotenv');\r\n-const userRoutes = require('./routes/'); // Update the path accordingly\r\n-\r\n-// Load environment variables from .env file\r\n-dotenv.config();\r\n-\r\n-// Set up Express\r\n-const app = express();\r\n-const port = process.env.PORT || 3000;\r\n-\r\n-// Connect to MongoDB\r\n-const dbURI = process.env.MONGODB_URI;\r\n-mongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true })\r\n-  .then(() => console.log('Connected to the database'))\r\n-  .catch((err) => console.error('Error connecting to the database', err));\r\n-\r\n-// Middleware\r\n-app.use(bodyParser.json());\r\n-\r\n-// Routes\r\n-app.use('/api/users', userRoutes); // Assuming your user routes are under /api/users\r\n-\r\n-// Start the server\r\n-app.listen(port, () => {\r\n-  console.log(`Server is running on port ${port}`);\r\n-});\r\n-\r\n-\r\n-\r\n-\r\n-// const createError = require(\"http-errors\");\r\n-// const express = require(\"express\");\r\n-// const cookieParser = require(\"cookie-parser\");\r\n-// const logger = require(\"morgan\");\r\n-// const mongoose = require(\"mongoose\");\r\n-// const http = require(\"http\");\r\n-// require(\"dotenv\").config();\r\n-\r\n-// const indexRouter = require(\"./routes/index\");\r\n-\r\n-// const app = express();\r\n-\r\n-// require(\"./models/user\");\r\n-// app.use(userRoutes);\r\n-\r\n-// // Database connection\r\n-\r\n-// mongoose\r\n-//   .connect(process.env.MONGO_URI, {\r\n-//     useNewUrlParser: true,\r\n-//     useUnifiedTopology: true,\r\n-//   })\r\n-//   .then(async () => {\r\n-//     console.log(\"Connected to DB\");\r\n-//     // Create a dummy document in a collection within the \"test2024\" database\r\n-//     const db = mongoose.connection;\r\n-//     const collection = db.collection(\"Test\");\r\n-\r\n-//     const test = { name: \"test\" };\r\n-//     await collection.insertOne(test);\r\n-\r\n-//     console.log(\"Database  created\");\r\n-//   })\r\n-//   .catch((err) => {\r\n-//     console.error(\"Error connecting to database:\", err);\r\n-//   });\r\n-\r\n-// // Set strictQuery to false to suppress the deprecation warning\r\n-// mongoose.set('strictQuery', false);\r\n-\r\n-// app.use(logger(\"dev\"));\r\n-// app.use(express.json());\r\n-// app.use(express.urlencoded({ extended: false }));\r\n-// app.use(cookieParser());\r\n-\r\n-// app.use(\"/\", indexRouter);\r\n-\r\n-// // Catch 404 and forward to error handler\r\n-// app.use(function (req, res, next) {\r\n-//   next(createError(404));\r\n-// });\r\n-\r\n-// // Error handler\r\n-// app.use(function (err, req, res, next) {\r\n-//   // Set locals, only providing error in development\r\n-//   res.locals.message = err.message;\r\n-//   res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n-\r\n-//   // Render the error page\r\n-//   res.status(err.status || 500);\r\n-//   res.json(err);\r\n-// });\r\n-\r\n-// const server = http.createServer(app);\r\n-// server.listen(process.env.PORT || 5000, () => {\r\n-//   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n-// });\r\n-const express = require('express');\r\n-const mongoose = require('mongoose');\r\n-const bodyParser = require('body-parser');\r\n-const dotenv = require('dotenv');\r\n-const userRoutes = require('./routes/userRoutes'); // Update the path accordingly\r\n-\r\n-// Load environment variables from .env file\r\n-dotenv.config();\r\n-\r\n-// Set up Express\r\n-const app = express();\r\n-const port = process.env.PORT || 3000;\r\n-\r\n-// Connect to MongoDB\r\n-const dbURI = process.env.MONGODB_URI;\r\n-mongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true })\r\n-  .then(() => console.log('Connected to the database'))\r\n-  .catch((err) => console.error('Error connecting to the database', err));\r\n-\r\n-// Middleware\r\n-app.use(bodyParser.json());\r\n-\r\n-// Routes\r\n-app.use('/api/users', userRoutes); // Assuming your user routes are under /api/users\r\n-\r\n-// Start the server\r\n-app.listen(port, () => {\r\n-  console.log(`Server is running on port ${port}`);\r\n-});\r\n-\r\n-\r\n-\r\n-\r\n-// const createError = require(\"http-errors\");\r\n-// const express = require(\"express\");\r\n-// const cookieParser = require(\"cookie-parser\");\r\n-// const logger = require(\"morgan\");\r\n-// const mongoose = require(\"mongoose\");\r\n-// const http = require(\"http\");\r\n-// require(\"dotenv\").config();\r\n-\r\n-// const indexRouter = require(\"./routes/index\");\r\n-\r\n-// const app = express();\r\n-\r\n-// require(\"./models/user\");\r\n-// app.use(userRoutes);\r\n-\r\n-// // Database connection\r\n-\r\n-// mongoose\r\n-//   .connect(process.env.MONGO_URI, {\r\n-//     useNewUrlParser: true,\r\n-//     useUnifiedTopology: true,\r\n-//   })\r\n-//   .then(async () => {\r\n-//     console.log(\"Connected to DB\");\r\n-//     // Create a dummy document in a collection within the \"test2024\" database\r\n-//     const db = mongoose.connection;\r\n-//     const collection = db.collection(\"Test\");\r\n-\r\n-//     const test = { name: \"test\" };\r\n-//     await collection.insertOne(test);\r\n-\r\n-//     console.log(\"Database  created\");\r\n-//   })\r\n-//   .catch((err) => {\r\n-//     console.error(\"Error connecting to database:\", err);\r\n-//   });\r\n-\r\n-// // Set strictQuery to false to suppress the deprecation warning\r\n-// mongoose.set('strictQuery', false);\r\n-\r\n-// app.use(logger(\"dev\"));\r\n-// app.use(express.json());\r\n-// app.use(express.urlencoded({ extended: false }));\r\n-// app.use(cookieParser());\r\n-\r\n-// app.use(\"/\", indexRouter);\r\n-\r\n-// // Catch 404 and forward to error handler\r\n-// app.use(function (req, res, next) {\r\n-//   next(createError(404));\r\n-// });\r\n-\r\n-// // Error handler\r\n-// app.use(function (err, req, res, next) {\r\n-//   // Set locals, only providing error in development\r\n-//   res.locals.message = err.message;\r\n-//   res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n-\r\n-//   // Render the error page\r\n-//   res.status(err.status || 500);\r\n-//   res.json(err);\r\n-// });\r\n-\r\n-// const server = http.createServer(app);\r\n-// server.listen(process.env.PORT || 5000, () => {\r\n-//   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n-// });\r\n-const express = require('express');\r\n-const mongoose = require('mongoose');\r\n-const bodyParser = require('body-parser');\r\n-const dotenv = require('dotenv');\r\n-const userRoutes = require('./'); // Update the path accordingly\r\n-\r\n-// Load environment variables from .env file\r\n-dotenv.config();\r\n-\r\n-// Set up Express\r\n-const app = express();\r\n-const port = process.env.PORT || 3000;\r\n-\r\n-// Connect to MongoDB\r\n-const dbURI = process.env.MONGODB_URI;\r\n-mongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true })\r\n-  .then(() => console.log('Connected to the database'))\r\n-  .catch((err) => console.error('Error connecting to the database', err));\r\n-\r\n-// Middleware\r\n-app.use(bodyParser.json());\r\n-\r\n-// Routes\r\n-app.use('/api/users', userRoutes); // Assuming your user routes are under /api/users\r\n-\r\n-// Start the server\r\n-app.listen(port, () => {\r\n-  console.log(`Server is running on port ${port}`);\r\n-});\r\n-\r\n-\r\n-\r\n-\r\n-// const createError = require(\"http-errors\");\r\n-// const express = require(\"express\");\r\n-// const cookieParser = require(\"cookie-parser\");\r\n-// const logger = require(\"morgan\");\r\n-// const mongoose = require(\"mongoose\");\r\n-// const http = require(\"http\");\r\n-// require(\"dotenv\").config();\r\n-\r\n-// const indexRouter = require(\"./routes/index\");\r\n-\r\n-// const app = express();\r\n-\r\n-// require(\"./models/user\");\r\n-// app.use(userRoutes);\r\n-\r\n-// // Database connection\r\n-\r\n-// mongoose\r\n-//   .connect(process.env.MONGO_URI, {\r\n-//     useNewUrlParser: true,\r\n-//     useUnifiedTopology: true,\r\n-//   })\r\n-//   .then(async () => {\r\n-//     console.log(\"Connected to DB\");\r\n-//     // Create a dummy document in a collection within the \"test2024\" database\r\n-//     const db = mongoose.connection;\r\n-//     const collection = db.collection(\"Test\");\r\n-\r\n-//     const test = { name: \"test\" };\r\n-//     await collection.insertOne(test);\r\n-\r\n-//     console.log(\"Database  created\");\r\n-//   })\r\n-//   .catch((err) => {\r\n-//     console.error(\"Error connecting to database:\", err);\r\n-//   });\r\n-\r\n-// // Set strictQuery to false to suppress the deprecation warning\r\n-// mongoose.set('strictQuery', false);\r\n-\r\n-// app.use(logger(\"dev\"));\r\n-// app.use(express.json());\r\n-// app.use(express.urlencoded({ extended: false }));\r\n-// app.use(cookieParser());\r\n-\r\n-// app.use(\"/\", indexRouter);\r\n-\r\n-// // Catch 404 and forward to error handler\r\n-// app.use(function (req, res, next) {\r\n-//   next(createError(404));\r\n-// });\r\n-\r\n-// // Error handler\r\n-// app.use(function (err, req, res, next) {\r\n-//   // Set locals, only providing error in development\r\n-//   res.locals.message = err.message;\r\n-//   res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n-\r\n-//   // Render the error page\r\n-//   res.status(err.status || 500);\r\n-//   res.json(err);\r\n-// });\r\n-\r\n-// const server = http.createServer(app);\r\n-// server.listen(process.env.PORT || 5000, () => {\r\n-//   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n-// });\r\n-// const createError = require(\"http-errors\");\r\n-// const express = require(\"express\");\r\n-// const cookieParser = require(\"cookie-parser\");\r\n-// const logger = require(\"morgan\");\r\n-// const mongoose = require(\"mongoose\");\r\n-// const http = require(\"http\");\r\n-// require(\"dotenv\").config();\r\n-\r\n-// const indexRouter = require(\"./routes/index\");\r\n-\r\n-// const app = express();\r\n-\r\n-// require(\"./models/user\");\r\n-// app.use(userRoutes);\r\n-\r\n-// // Database connection\r\n-\r\n-// mongoose\r\n-//   .connect(process.env.MONGO_URI, {\r\n-//     useNewUrlParser: true,\r\n-//     useUnifiedTopology: true,\r\n-//   })\r\n-//   .then(async () => {\r\n-//     console.log(\"Connected to DB\");\r\n-//     // Create a dummy document in a collection within the \"test2024\" database\r\n-//     const db = mongoose.connection;\r\n-//     const collection = db.collection(\"Test\");\r\n-\r\n-//     const test = { name: \"test\" };\r\n-//     await collection.insertOne(test);\r\n-\r\n-//     console.log(\"Database  created\");\r\n-//   })\r\n-//   .catch((err) => {\r\n-//     console.error(\"Error connecting to database:\", err);\r\n-//   });\r\n-\r\n-// // Set strictQuery to false to suppress the deprecation warning\r\n-// mongoose.set('strictQuery', false);\r\n-\r\n-// app.use(logger(\"dev\"));\r\n-// app.use(express.json());\r\n-// app.use(express.urlencoded({ extended: false }));\r\n-// app.use(cookieParser());\r\n-\r\n-// app.use(\"/\", indexRouter);\r\n-\r\n-// // Catch 404 and forward to error handler\r\n-// app.use(function (req, res, next) {\r\n-//   next(createError(404));\r\n-// });\r\n-\r\n-// // Error handler\r\n-// app.use(function (err, req, res, next) {\r\n-//   // Set locals, only providing error in development\r\n-//   res.locals.message = err.message;\r\n-//   res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n-\r\n-//   // Render the error page\r\n-//   res.status(err.status || 500);\r\n-//   res.json(err);\r\n-// });\r\n-\r\n-// const server = http.createServer(app);\r\n-// server.listen(process.env.PORT || 5000, () => {\r\n-//   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n-// });\r\n"
                },
                {
                    "date": 1697559143023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require('express');\r\n const mongoose = require('mongoose');\r\n const bodyParser = require('body-parser');\r\n const dotenv = require('dotenv');\r\n-const userRoutes = require('./routes/'); // Update the path accordingly\r\n+const userRoutes = require('./routes/UserRoute'); // Update the path accordingly\r\n \r\n // Load environment variables from .env file\r\n dotenv.config();\r\n \r\n"
                },
                {
                    "date": 1697559148380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require('express');\r\n const mongoose = require('mongoose');\r\n const bodyParser = require('body-parser');\r\n const dotenv = require('dotenv');\r\n-const userRoutes = require('./routes/UserRoute'); // Update the path accordingly\r\n+const userRoutes = require('./routes/userRoutes'); // Update the path accordingly\r\n \r\n // Load environment variables from .env file\r\n dotenv.config();\r\n \r\n"
                },
                {
                    "date": 1697559182755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n // Middleware\r\n app.use(bodyParser.json());\r\n \r\n // Routes\r\n-app.use('/api/users', userRoutes); // Assuming your user routes are under /api/users\r\n+app.use('/users', userRoutes); // Assuming your user routes are under /api/users\r\n \r\n // Start the server\r\n app.listen(port, () => {\r\n   console.log(`Server is running on port ${port}`);\r\n"
                },
                {
                    "date": 1697559191261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require('express');\r\n const mongoose = require('mongoose');\r\n const bodyParser = require('body-parser');\r\n const dotenv = require('dotenv');\r\n-const userRoutes = require('./routes/userRoutes'); // Update the path accordingly\r\n+const userRoute = require('./routes/userRoutes'); // Update the path accordingly\r\n \r\n // Load environment variables from .env file\r\n dotenv.config();\r\n \r\n"
                },
                {
                    "date": 1697559204218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,100 @@\n+const express = require('express');\r\n+const mongoose = require('mongoose');\r\n+const bodyParser = require('body-parser');\r\n+const dotenv = require('dotenv');\r\n+const userRoutes = require('./routes/userRoutes'); // Update the path accordingly\r\n+\r\n+// Load environment variables from .env file\r\n+dotenv.config();\r\n+\r\n+// Set up Express\r\n+const app = express();\r\n+const port = process.env.PORT || 3000;\r\n+\r\n+// Connect to MongoDB\r\n+const dbURI = process.env.MONGODB_URI;\r\n+mongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true })\r\n+  .then(() => console.log('Connected to the database'))\r\n+  .catch((err) => console.error('Error connecting to the database', err));\r\n+\r\n+// Middleware\r\n+app.use(bodyParser.json());\r\n+\r\n+// Routes\r\n+app.use('/users', userRoutes); // Assuming your user routes are under /api/users\r\n+\r\n+// Start the server\r\n+app.listen(port, () => {\r\n+  console.log(`Server is running on port ${port}`);\r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+// const createError = require(\"http-errors\");\r\n+// const express = require(\"express\");\r\n+// const cookieParser = require(\"cookie-parser\");\r\n+// const logger = require(\"morgan\");\r\n+// const mongoose = require(\"mongoose\");\r\n+// const http = require(\"http\");\r\n+// require(\"dotenv\").config();\r\n+\r\n+// const indexRouter = require(\"./routes/index\");\r\n+\r\n+// const app = express();\r\n+\r\n+// require(\"./models/user\");\r\n+// app.use(userRoutes);\r\n+\r\n+// // Database connection\r\n+\r\n+// mongoose\r\n+//   .connect(process.env.MONGO_URI, {\r\n+//     useNewUrlParser: true,\r\n+//     useUnifiedTopology: true,\r\n+//   })\r\n+//   .then(async () => {\r\n+//     console.log(\"Connected to DB\");\r\n+//     // Create a dummy document in a collection within the \"test2024\" database\r\n+//     const db = mongoose.connection;\r\n+//     const collection = db.collection(\"Test\");\r\n+\r\n+//     const test = { name: \"test\" };\r\n+//     await collection.insertOne(test);\r\n+\r\n+//     console.log(\"Database  created\");\r\n+//   })\r\n+//   .catch((err) => {\r\n+//     console.error(\"Error connecting to database:\", err);\r\n+//   });\r\n+\r\n+// // Set strictQuery to false to suppress the deprecation warning\r\n+// mongoose.set('strictQuery', false);\r\n+\r\n+// app.use(logger(\"dev\"));\r\n+// app.use(express.json());\r\n+// app.use(express.urlencoded({ extended: false }));\r\n+// app.use(cookieParser());\r\n+\r\n+// app.use(\"/\", indexRouter);\r\n+\r\n+// // Catch 404 and forward to error handler\r\n+// app.use(function (req, res, next) {\r\n+//   next(createError(404));\r\n+// });\r\n+\r\n+// // Error handler\r\n+// app.use(function (err, req, res, next) {\r\n+//   // Set locals, only providing error in development\r\n+//   res.locals.message = err.message;\r\n+//   res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n+\r\n+//   // Render the error page\r\n+//   res.status(err.status || 500);\r\n+//   res.json(err);\r\n+// });\r\n+\r\n+// const server = http.createServer(app);\r\n+// server.listen(process.env.PORT || 5000, () => {\r\n+//   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n+// });\r\n"
                },
                {
                    "date": 1697559209985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require('express');\r\n const mongoose = require('mongoose');\r\n const bodyParser = require('body-parser');\r\n const dotenv = require('dotenv');\r\n-const userRoutes = require('./routes/userRoutes'); // Update the path accordingly\r\n+const userRoutes = require('/routes/userRoutes'); // Update the path accordingly\r\n \r\n // Load environment variables from .env file\r\n dotenv.config();\r\n \r\n@@ -97,104 +97,4 @@\n // const server = http.createServer(app);\r\n // server.listen(process.env.PORT || 5000, () => {\r\n //   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n // });\r\n-const express = require('express');\r\n-const mongoose = require('mongoose');\r\n-const bodyParser = require('body-parser');\r\n-const dotenv = require('dotenv');\r\n-const userRoute = require('./routes/userRoutes'); // Update the path accordingly\r\n-\r\n-// Load environment variables from .env file\r\n-dotenv.config();\r\n-\r\n-// Set up Express\r\n-const app = express();\r\n-const port = process.env.PORT || 3000;\r\n-\r\n-// Connect to MongoDB\r\n-const dbURI = process.env.MONGODB_URI;\r\n-mongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true })\r\n-  .then(() => console.log('Connected to the database'))\r\n-  .catch((err) => console.error('Error connecting to the database', err));\r\n-\r\n-// Middleware\r\n-app.use(bodyParser.json());\r\n-\r\n-// Routes\r\n-app.use('/users', userRoutes); // Assuming your user routes are under /api/users\r\n-\r\n-// Start the server\r\n-app.listen(port, () => {\r\n-  console.log(`Server is running on port ${port}`);\r\n-});\r\n-\r\n-\r\n-\r\n-\r\n-// const createError = require(\"http-errors\");\r\n-// const express = require(\"express\");\r\n-// const cookieParser = require(\"cookie-parser\");\r\n-// const logger = require(\"morgan\");\r\n-// const mongoose = require(\"mongoose\");\r\n-// const http = require(\"http\");\r\n-// require(\"dotenv\").config();\r\n-\r\n-// const indexRouter = require(\"./routes/index\");\r\n-\r\n-// const app = express();\r\n-\r\n-// require(\"./models/user\");\r\n-// app.use(userRoutes);\r\n-\r\n-// // Database connection\r\n-\r\n-// mongoose\r\n-//   .connect(process.env.MONGO_URI, {\r\n-//     useNewUrlParser: true,\r\n-//     useUnifiedTopology: true,\r\n-//   })\r\n-//   .then(async () => {\r\n-//     console.log(\"Connected to DB\");\r\n-//     // Create a dummy document in a collection within the \"test2024\" database\r\n-//     const db = mongoose.connection;\r\n-//     const collection = db.collection(\"Test\");\r\n-\r\n-//     const test = { name: \"test\" };\r\n-//     await collection.insertOne(test);\r\n-\r\n-//     console.log(\"Database  created\");\r\n-//   })\r\n-//   .catch((err) => {\r\n-//     console.error(\"Error connecting to database:\", err);\r\n-//   });\r\n-\r\n-// // Set strictQuery to false to suppress the deprecation warning\r\n-// mongoose.set('strictQuery', false);\r\n-\r\n-// app.use(logger(\"dev\"));\r\n-// app.use(express.json());\r\n-// app.use(express.urlencoded({ extended: false }));\r\n-// app.use(cookieParser());\r\n-\r\n-// app.use(\"/\", indexRouter);\r\n-\r\n-// // Catch 404 and forward to error handler\r\n-// app.use(function (req, res, next) {\r\n-//   next(createError(404));\r\n-// });\r\n-\r\n-// // Error handler\r\n-// app.use(function (err, req, res, next) {\r\n-//   // Set locals, only providing error in development\r\n-//   res.locals.message = err.message;\r\n-//   res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n-\r\n-//   // Render the error page\r\n-//   res.status(err.status || 500);\r\n-//   res.json(err);\r\n-// });\r\n-\r\n-// const server = http.createServer(app);\r\n-// server.listen(process.env.PORT || 5000, () => {\r\n-//   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n-// });\r\n"
                },
                {
                    "date": 1697559238134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,100 @@\n+const express = require('express');\r\n+const mongoose = require('mongoose');\r\n+const bodyParser = require('body-parser');\r\n+const dotenv = require('dotenv');\r\n+const userRoutes = require('./routes/userRoutes'); // Update the path accordingly\r\n+\r\n+// Load environment variables from .env file\r\n+dotenv.config();\r\n+\r\n+// Set up Express\r\n+const app = express();\r\n+const port = process.env.PORT || 3000;\r\n+\r\n+// Connect to MongoDB\r\n+const dbURI = process.env.MONGODB_URI;\r\n+mongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true })\r\n+  .then(() => console.log('Connected to the database'))\r\n+  .catch((err) => console.error('Error connecting to the database', err));\r\n+\r\n+// Middleware\r\n+app.use(bodyParser.json());\r\n+\r\n+// Routes\r\n+app.use('/users', userRoutes); // Assuming your user routes are under /api/users\r\n+\r\n+// Start the server\r\n+app.listen(port, () => {\r\n+  console.log(`Server is running on port ${port}`);\r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+// const createError = require(\"http-errors\");\r\n+// const express = require(\"express\");\r\n+// const cookieParser = require(\"cookie-parser\");\r\n+// const logger = require(\"morgan\");\r\n+// const mongoose = require(\"mongoose\");\r\n+// const http = require(\"http\");\r\n+// require(\"dotenv\").config();\r\n+\r\n+// const indexRouter = require(\"./routes/index\");\r\n+\r\n+// const app = express();\r\n+\r\n+// require(\"./models/user\");\r\n+// app.use(userRoutes);\r\n+\r\n+// // Database connection\r\n+\r\n+// mongoose\r\n+//   .connect(process.env.MONGO_URI, {\r\n+//     useNewUrlParser: true,\r\n+//     useUnifiedTopology: true,\r\n+//   })\r\n+//   .then(async () => {\r\n+//     console.log(\"Connected to DB\");\r\n+//     // Create a dummy document in a collection within the \"test2024\" database\r\n+//     const db = mongoose.connection;\r\n+//     const collection = db.collection(\"Test\");\r\n+\r\n+//     const test = { name: \"test\" };\r\n+//     await collection.insertOne(test);\r\n+\r\n+//     console.log(\"Database  created\");\r\n+//   })\r\n+//   .catch((err) => {\r\n+//     console.error(\"Error connecting to database:\", err);\r\n+//   });\r\n+\r\n+// // Set strictQuery to false to suppress the deprecation warning\r\n+// mongoose.set('strictQuery', false);\r\n+\r\n+// app.use(logger(\"dev\"));\r\n+// app.use(express.json());\r\n+// app.use(express.urlencoded({ extended: false }));\r\n+// app.use(cookieParser());\r\n+\r\n+// app.use(\"/\", indexRouter);\r\n+\r\n+// // Catch 404 and forward to error handler\r\n+// app.use(function (req, res, next) {\r\n+//   next(createError(404));\r\n+// });\r\n+\r\n+// // Error handler\r\n+// app.use(function (err, req, res, next) {\r\n+//   // Set locals, only providing error in development\r\n+//   res.locals.message = err.message;\r\n+//   res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n+\r\n+//   // Render the error page\r\n+//   res.status(err.status || 500);\r\n+//   res.json(err);\r\n+// });\r\n+\r\n+// const server = http.createServer(app);\r\n+// server.listen(process.env.PORT || 5000, () => {\r\n+//   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n+// });\r\n"
                },
                {
                    "date": 1697559243557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,100 @@\n+const express = require('express');\r\n+const mongoose = require('mongoose');\r\n+const bodyParser = require('body-parser');\r\n+const dotenv = require('dotenv');\r\n+const userRoutes = require(\"./routes/userRoutes'); // Update the path accordingly\r\n+\r\n+// Load environment variables from .env file\r\n+dotenv.config();\r\n+\r\n+// Set up Express\r\n+const app = express();\r\n+const port = process.env.PORT || 3000;\r\n+\r\n+// Connect to MongoDB\r\n+const dbURI = process.env.MONGODB_URI;\r\n+mongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true })\r\n+  .then(() => console.log('Connected to the database'))\r\n+  .catch((err) => console.error('Error connecting to the database', err));\r\n+\r\n+// Middleware\r\n+app.use(bodyParser.json());\r\n+\r\n+// Routes\r\n+app.use('/users', userRoutes); // Assuming your user routes are under /api/users\r\n+\r\n+// Start the server\r\n+app.listen(port, () => {\r\n+  console.log(`Server is running on port ${port}`);\r\n+});\r\n+\r\n+\r\n+\r\n+\r\n+// const createError = require(\"http-errors\");\r\n+// const express = require(\"express\");\r\n+// const cookieParser = require(\"cookie-parser\");\r\n+// const logger = require(\"morgan\");\r\n+// const mongoose = require(\"mongoose\");\r\n+// const http = require(\"http\");\r\n+// require(\"dotenv\").config();\r\n+\r\n+// const indexRouter = require(\"./routes/index\");\r\n+\r\n+// const app = express();\r\n+\r\n+// require(\"./models/user\");\r\n+// app.use(userRoutes);\r\n+\r\n+// // Database connection\r\n+\r\n+// mongoose\r\n+//   .connect(process.env.MONGO_URI, {\r\n+//     useNewUrlParser: true,\r\n+//     useUnifiedTopology: true,\r\n+//   })\r\n+//   .then(async () => {\r\n+//     console.log(\"Connected to DB\");\r\n+//     // Create a dummy document in a collection within the \"test2024\" database\r\n+//     const db = mongoose.connection;\r\n+//     const collection = db.collection(\"Test\");\r\n+\r\n+//     const test = { name: \"test\" };\r\n+//     await collection.insertOne(test);\r\n+\r\n+//     console.log(\"Database  created\");\r\n+//   })\r\n+//   .catch((err) => {\r\n+//     console.error(\"Error connecting to database:\", err);\r\n+//   });\r\n+\r\n+// // Set strictQuery to false to suppress the deprecation warning\r\n+// mongoose.set('strictQuery', false);\r\n+\r\n+// app.use(logger(\"dev\"));\r\n+// app.use(express.json());\r\n+// app.use(express.urlencoded({ extended: false }));\r\n+// app.use(cookieParser());\r\n+\r\n+// app.use(\"/\", indexRouter);\r\n+\r\n+// // Catch 404 and forward to error handler\r\n+// app.use(function (req, res, next) {\r\n+//   next(createError(404));\r\n+// });\r\n+\r\n+// // Error handler\r\n+// app.use(function (err, req, res, next) {\r\n+//   // Set locals, only providing error in development\r\n+//   res.locals.message = err.message;\r\n+//   res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n+\r\n+//   // Render the error page\r\n+//   res.status(err.status || 500);\r\n+//   res.json(err);\r\n+// });\r\n+\r\n+// const server = http.createServer(app);\r\n+// server.listen(process.env.PORT || 5000, () => {\r\n+//   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n+// });\r\n"
                },
                {
                    "date": 1697559309021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,204 +97,4 @@\n // const server = http.createServer(app);\r\n // server.listen(process.env.PORT || 5000, () => {\r\n //   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n // });\r\n-const express = require('express');\r\n-const mongoose = require('mongoose');\r\n-const bodyParser = require('body-parser');\r\n-const dotenv = require('dotenv');\r\n-const userRoutes = require('./routes/userRoutes'); // Update the path accordingly\r\n-\r\n-// Load environment variables from .env file\r\n-dotenv.config();\r\n-\r\n-// Set up Express\r\n-const app = express();\r\n-const port = process.env.PORT || 3000;\r\n-\r\n-// Connect to MongoDB\r\n-const dbURI = process.env.MONGODB_URI;\r\n-mongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true })\r\n-  .then(() => console.log('Connected to the database'))\r\n-  .catch((err) => console.error('Error connecting to the database', err));\r\n-\r\n-// Middleware\r\n-app.use(bodyParser.json());\r\n-\r\n-// Routes\r\n-app.use('/users', userRoutes); // Assuming your user routes are under /api/users\r\n-\r\n-// Start the server\r\n-app.listen(port, () => {\r\n-  console.log(`Server is running on port ${port}`);\r\n-});\r\n-\r\n-\r\n-\r\n-\r\n-// const createError = require(\"http-errors\");\r\n-// const express = require(\"express\");\r\n-// const cookieParser = require(\"cookie-parser\");\r\n-// const logger = require(\"morgan\");\r\n-// const mongoose = require(\"mongoose\");\r\n-// const http = require(\"http\");\r\n-// require(\"dotenv\").config();\r\n-\r\n-// const indexRouter = require(\"./routes/index\");\r\n-\r\n-// const app = express();\r\n-\r\n-// require(\"./models/user\");\r\n-// app.use(userRoutes);\r\n-\r\n-// // Database connection\r\n-\r\n-// mongoose\r\n-//   .connect(process.env.MONGO_URI, {\r\n-//     useNewUrlParser: true,\r\n-//     useUnifiedTopology: true,\r\n-//   })\r\n-//   .then(async () => {\r\n-//     console.log(\"Connected to DB\");\r\n-//     // Create a dummy document in a collection within the \"test2024\" database\r\n-//     const db = mongoose.connection;\r\n-//     const collection = db.collection(\"Test\");\r\n-\r\n-//     const test = { name: \"test\" };\r\n-//     await collection.insertOne(test);\r\n-\r\n-//     console.log(\"Database  created\");\r\n-//   })\r\n-//   .catch((err) => {\r\n-//     console.error(\"Error connecting to database:\", err);\r\n-//   });\r\n-\r\n-// // Set strictQuery to false to suppress the deprecation warning\r\n-// mongoose.set('strictQuery', false);\r\n-\r\n-// app.use(logger(\"dev\"));\r\n-// app.use(express.json());\r\n-// app.use(express.urlencoded({ extended: false }));\r\n-// app.use(cookieParser());\r\n-\r\n-// app.use(\"/\", indexRouter);\r\n-\r\n-// // Catch 404 and forward to error handler\r\n-// app.use(function (req, res, next) {\r\n-//   next(createError(404));\r\n-// });\r\n-\r\n-// // Error handler\r\n-// app.use(function (err, req, res, next) {\r\n-//   // Set locals, only providing error in development\r\n-//   res.locals.message = err.message;\r\n-//   res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n-\r\n-//   // Render the error page\r\n-//   res.status(err.status || 500);\r\n-//   res.json(err);\r\n-// });\r\n-\r\n-// const server = http.createServer(app);\r\n-// server.listen(process.env.PORT || 5000, () => {\r\n-//   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n-// });\r\n-const express = require('express');\r\n-const mongoose = require('mongoose');\r\n-const bodyParser = require('body-parser');\r\n-const dotenv = require('dotenv');\r\n-const userRoutes = require('/routes/userRoutes'); // Update the path accordingly\r\n-\r\n-// Load environment variables from .env file\r\n-dotenv.config();\r\n-\r\n-// Set up Express\r\n-const app = express();\r\n-const port = process.env.PORT || 3000;\r\n-\r\n-// Connect to MongoDB\r\n-const dbURI = process.env.MONGODB_URI;\r\n-mongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true })\r\n-  .then(() => console.log('Connected to the database'))\r\n-  .catch((err) => console.error('Error connecting to the database', err));\r\n-\r\n-// Middleware\r\n-app.use(bodyParser.json());\r\n-\r\n-// Routes\r\n-app.use('/users', userRoutes); // Assuming your user routes are under /api/users\r\n-\r\n-// Start the server\r\n-app.listen(port, () => {\r\n-  console.log(`Server is running on port ${port}`);\r\n-});\r\n-\r\n-\r\n-\r\n-\r\n-// const createError = require(\"http-errors\");\r\n-// const express = require(\"express\");\r\n-// const cookieParser = require(\"cookie-parser\");\r\n-// const logger = require(\"morgan\");\r\n-// const mongoose = require(\"mongoose\");\r\n-// const http = require(\"http\");\r\n-// require(\"dotenv\").config();\r\n-\r\n-// const indexRouter = require(\"./routes/index\");\r\n-\r\n-// const app = express();\r\n-\r\n-// require(\"./models/user\");\r\n-// app.use(userRoutes);\r\n-\r\n-// // Database connection\r\n-\r\n-// mongoose\r\n-//   .connect(process.env.MONGO_URI, {\r\n-//     useNewUrlParser: true,\r\n-//     useUnifiedTopology: true,\r\n-//   })\r\n-//   .then(async () => {\r\n-//     console.log(\"Connected to DB\");\r\n-//     // Create a dummy document in a collection within the \"test2024\" database\r\n-//     const db = mongoose.connection;\r\n-//     const collection = db.collection(\"Test\");\r\n-\r\n-//     const test = { name: \"test\" };\r\n-//     await collection.insertOne(test);\r\n-\r\n-//     console.log(\"Database  created\");\r\n-//   })\r\n-//   .catch((err) => {\r\n-//     console.error(\"Error connecting to database:\", err);\r\n-//   });\r\n-\r\n-// // Set strictQuery to false to suppress the deprecation warning\r\n-// mongoose.set('strictQuery', false);\r\n-\r\n-// app.use(logger(\"dev\"));\r\n-// app.use(express.json());\r\n-// app.use(express.urlencoded({ extended: false }));\r\n-// app.use(cookieParser());\r\n-\r\n-// app.use(\"/\", indexRouter);\r\n-\r\n-// // Catch 404 and forward to error handler\r\n-// app.use(function (req, res, next) {\r\n-//   next(createError(404));\r\n-// });\r\n-\r\n-// // Error handler\r\n-// app.use(function (err, req, res, next) {\r\n-//   // Set locals, only providing error in development\r\n-//   res.locals.message = err.message;\r\n-//   res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n-\r\n-//   // Render the error page\r\n-//   res.status(err.status || 500);\r\n-//   res.json(err);\r\n-// });\r\n-\r\n-// const server = http.createServer(app);\r\n-// server.listen(process.env.PORT || 5000, () => {\r\n-//   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n-// });\r\n"
                },
                {
                    "date": 1697559673641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require('express');\r\n const mongoose = require('mongoose');\r\n const bodyParser = require('body-parser');\r\n-const dotenv = require('dotenv');\r\n-const userRoutes = require(\"./routes/userRoutes'); // Update the path accordingly\r\n+require('dotenv').config();\r\n+const userRoutes = require('./routes/userRoutes'); // Update the path accordingly\r\n \r\n // Load environment variables from .env file\r\n dotenv.config();\r\n \r\n"
                },
                {
                    "date": 1697559688935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const express = require('express');\r\n const mongoose = require('mongoose');\r\n const bodyParser = require('body-parser');\r\n-require('dotenv').config();\r\n+const dotenv = require('dotenv');\r\n const userRoutes = require('./routes/userRoutes'); // Update the path accordingly\r\n \r\n // Load environment variables from .env file\r\n dotenv.config();\r\n"
                },
                {
                    "date": 1697559881671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,100 +1,68 @@\n-const express = require('express');\r\n-const mongoose = require('mongoose');\r\n-const bodyParser = require('body-parser');\r\n-const dotenv = require('dotenv');\r\n-const userRoutes = require('./routes/userRoutes'); // Update the path accordingly\r\n+const createError = require(\"http-errors\");\r\n+const express = require(\"express\");\r\n+const cookieParser = require(\"cookie-parser\");\r\n+const logger = require(\"morgan\");\r\n+const mongoose = require(\"mongoose\");\r\n+const http = require(\"http\");\r\n+const userRoutes = require(\".userRoutesuserRoutes\"); // Adjust the path accordingly\r\n+require(\"dotenv\").config();\r\n \r\n-// Load environment variables from .env file\r\n-dotenv.config();\r\n+const indexRouter = require(\"./routes/index\");\r\n \r\n-// Set up Express\r\n const app = express();\r\n-const port = process.env.PORT || 3000;\r\n \r\n-// Connect to MongoDB\r\n-const dbURI = process.env.MONGODB_URI;\r\n-mongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true })\r\n-  .then(() => console.log('Connected to the database'))\r\n-  .catch((err) => console.error('Error connecting to the database', err));\r\n+require(\"./models/user\");\r\n+app.use(userRoutes);\r\n \r\n-// Middleware\r\n-app.use(bodyParser.json());\r\n+// Database connection\r\n \r\n-// Routes\r\n-app.use('/users', userRoutes); // Assuming your user routes are under /api/users\r\n+mongoose\r\n+  .connect(process.env.MONGO_URI, {\r\n+    useNewUrlParser: true,\r\n+    useUnifiedTopology: true,\r\n+  })\r\n+  .then(async () => {\r\n+    console.log(\"Connected to DB\");\r\n+    // Create a dummy document in a collection within the \"test2024\" database\r\n+    const db = mongoose.connection;\r\n+    const collection = db.collection(\"Test\");\r\n \r\n-// Start the server\r\n-app.listen(port, () => {\r\n-  console.log(`Server is running on port ${port}`);\r\n-});\r\n+    const test = { name: \"test\" };\r\n+    await collection.insertOne(test);\r\n \r\n+    console.log(\"Database  created\");\r\n+  })\r\n+  .catch((err) => {\r\n+    console.error(\"Error connecting to database:\", err);\r\n+  });\r\n \r\n+// Set strictQuery to false to suppress the deprecation warning\r\n+mongoose.set('strictQuery', false);\r\n \r\n+app.use(logger(\"dev\"));\r\n+app.use(express.json());\r\n+app.use(express.urlencoded({ extended: false }));\r\n+app.use(cookieParser());\r\n \r\n-// const createError = require(\"http-errors\");\r\n-// const express = require(\"express\");\r\n-// const cookieParser = require(\"cookie-parser\");\r\n-// const logger = require(\"morgan\");\r\n-// const mongoose = require(\"mongoose\");\r\n-// const http = require(\"http\");\r\n-// require(\"dotenv\").config();\r\n+app.use(\"/\", indexRouter);\r\n \r\n-// const indexRouter = require(\"./routes/index\");\r\n+// Catch 404 and forward to error handler\r\n+app.use(function (req, res, next) {\r\n+  next(createError(404));\r\n+});\r\n \r\n-// const app = express();\r\n+// Error handler\r\n+app.use(function (err, req, res, next) {\r\n+  // Set locals, only providing error in development\r\n+  res.locals.message = err.message;\r\n+  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n \r\n-// require(\"./models/user\");\r\n-// app.use(userRoutes);\r\n+  // Render the error page\r\n+  res.status(err.status || 500);\r\n+  res.json(err);\r\n+});\r\n \r\n-// // Database connection\r\n-\r\n-// mongoose\r\n-//   .connect(process.env.MONGO_URI, {\r\n-//     useNewUrlParser: true,\r\n-//     useUnifiedTopology: true,\r\n-//   })\r\n-//   .then(async () => {\r\n-//     console.log(\"Connected to DB\");\r\n-//     // Create a dummy document in a collection within the \"test2024\" database\r\n-//     const db = mongoose.connection;\r\n-//     const collection = db.collection(\"Test\");\r\n-\r\n-//     const test = { name: \"test\" };\r\n-//     await collection.insertOne(test);\r\n-\r\n-//     console.log(\"Database  created\");\r\n-//   })\r\n-//   .catch((err) => {\r\n-//     console.error(\"Error connecting to database:\", err);\r\n-//   });\r\n-\r\n-// // Set strictQuery to false to suppress the deprecation warning\r\n-// mongoose.set('strictQuery', false);\r\n-\r\n-// app.use(logger(\"dev\"));\r\n-// app.use(express.json());\r\n-// app.use(express.urlencoded({ extended: false }));\r\n-// app.use(cookieParser());\r\n-\r\n-// app.use(\"/\", indexRouter);\r\n-\r\n-// // Catch 404 and forward to error handler\r\n-// app.use(function (req, res, next) {\r\n-//   next(createError(404));\r\n-// });\r\n-\r\n-// // Error handler\r\n-// app.use(function (err, req, res, next) {\r\n-//   // Set locals, only providing error in development\r\n-//   res.locals.message = err.message;\r\n-//   res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n-\r\n-//   // Render the error page\r\n-//   res.status(err.status || 500);\r\n-//   res.json(err);\r\n-// });\r\n-\r\n-// const server = http.createServer(app);\r\n-// server.listen(process.env.PORT || 5000, () => {\r\n-//   console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n-// });\r\n+const server = http.createServer(app);\r\n+server.listen(process.env.PORT || 5000, () => {\r\n+  console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n+});\r\n"
                },
                {
                    "date": 1697559905070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,10 @@\n const cookieParser = require(\"cookie-parser\");\r\n const logger = require(\"morgan\");\r\n const mongoose = require(\"mongoose\");\r\n const http = require(\"http\");\r\n-const userRoutes = require('./routes/userRoutes');require(\"dotenv\").config();\r\n+const userRoutes = require('./routes/userRoutes');\r\n+require(\"dotenv\").config();\r\n \r\n const indexRouter = require(\"./routes/index\");\r\n \r\n const app = express();\r\n"
                },
                {
                    "date": 1697562973119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,53 @@\n+const createError = require(\"http-errors\");\r\n+const express = require(\"express\");\r\n+const path = require(\"path\");\r\n+const cookieParser = require(\"cookie-parser\");\r\n+const logger = require(\"morgan\");\r\n+const indexRouter = require(\"./routes/index\");\r\n+const mongoose = require(\"mongoose\");\r\n+const userRoutes = require(\"./routes/userRoutes\");\r\n+\r\n+require(\"dotenv\").config();\r\n+require(\"./models/user\");\r\n+\r\n+const app = express();\r\n+mongoose.set(\"strictQuery\", true);\r\n+\r\n+app.set(\"views\", \"views\"); // set the views directory\r\n+app.set(\"view engine\", \"twig\"); // set the view engine\r\n+\r\n+app.use(userRoutes);\r\n+app.use(\"/\", indexRouter);\r\n+\r\n+app.get(\"/verify-email/:token\", function (req, res) {\r\n+  res.render(\"verification\");\r\n+});\r\n+\r\n+app.use(function (req, res, next) {\r\n+  next(createError(404));\r\n+});\r\n+\r\n+app.use(function (err, req, res, next) {\r\n+  res.locals.message = err.message;\r\n+  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n+  res.status(err.status || 500);\r\n+  res.json(err.message);\r\n+});\r\n+\r\n+// Database connection\r\n+mongoose\r\n+  .connect(process.env.DATABASE_URL, { useNewUrlParser: true })\r\n+  .then(() => {\r\n+    console.log(\"Connected to database\");\r\n+  })\r\n+  .catch((err) => {\r\n+    console.log(\"Error connecting to database\", err);\r\n+  });\r\n+\r\n+const port = process.env.PORT || 5000; // Use the PORT environment variable if available, or default to 5000\r\n+\r\n+app.listen(port, () => {\r\n+  console.log('Server is running on port ${port});\r\n+});\r\n+\r\n+module.exports = app;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1697557083986,
            "name": "Commit-0",
            "content": "var createError = require(\"http-errors\");\r\nvar express = require(\"express\");\r\nvar cookieParser = require(\"cookie-parser\");\r\nvar logger = require(\"morgan\");\r\nconst mongoose = require(\"mongoose\");\r\nconst http = require(\"http\");\r\nrequire(\"dotenv\").config();\r\n\r\nvar indexRouter = require(\"./routes/index\");\r\n\r\nvar app = express();\r\n\r\n\r\n\r\nrequire(\"./models/user\");\r\n\r\n// Database connection\r\n\r\nmongoose\r\n  .connect(process.env.MONGO_URI, {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true,\r\n  })\r\n  .then(async () => {\r\n    console.log(\"Connected to DB\");\r\n    // Create a dummy document in a collection within the \"test2024\" database\r\n    const db = mongoose.connection;\r\n    const collection = db.collection(\"Test\");\r\n\r\n    const test = { name: \"test\" };\r\n    await collection.insertOne(test);\r\n\r\n    console.log(\"Database  created\");\r\n  })\r\n  .catch((err) => {\r\n    console.error(\"Error connecting to database:\", err);\r\n  });\r\n\r\n\r\n// Set strictQuery to false to suppress the deprecation warning\r\nmongoose.set('strictQuery', false);\r\n\r\napp.use(logger(\"dev\"));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\n\r\napp.use(\"/\", indexRouter);\r\n\r\n// Catch 404 and forward to error handler\r\napp.use(function (req, res, next) {\r\n  next(createError(404));\r\n});\r\n\r\n// Error handler\r\napp.use(function (err, req, res, next) {\r\n  // Set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n\r\n  // Render the error page\r\n  res.status(err.status || 500);\r\n  res.json(err);\r\n});\r\n\r\nconst server = http.createServer(app);\r\nserver.listen(process.env.PORT || 5000, () => {\r\n  console.log(`App is running on port ${process.env.PORT || 5000}`);\r\n});\r\n"
        }
    ]
}